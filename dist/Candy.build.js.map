{"version":3,"sources":["webpack://Candy/webpack/universalModuleDefinition","webpack://Candy/webpack/bootstrap","webpack://Candy/./src/core.js","webpack://Candy/./src/app.js","webpack://Candy/./src/renderer.js","webpack://Candy/./src/io.js","webpack://Candy/./src/utils.js","webpack://Candy/./src/globals.js","webpack://Candy/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Candy","canvas","width","height","undefined","document","querySelector","ctx","getContext","CANVAS_WIDTH","CANVAS_HEIGHT","idIndex","screenBuffers","fireCallback","resCount","doFill","doStroke","rectmode","font","animateLoop","preload","trypreload","_initCanvas","window","timer","setInterval","time","performance","now","toFixed","console","log","clearInterval","resize","cull","addEventListener","resizeCanvas","createCanvas","w","h","createElement","id","body","appendChild","index","createScreenBuffer","putScreenBuffer","data","drawImage","animate","noLoop","loop","func","requestAnimationFrame","targetHeight","innerWidth","innerHeight","style","left","top","noFill","noStroke","fill","g","b","a","color","_parseColor","CanvasGradient","grad","createLinearGradient","length","addColorStop","fillStyle","stroke","strokeStyle","linearGradient","x","y","colors","ratio","percent","split","radialGradient","innerRadius","outerRadius","createRadialGradient","shadow","blur","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","noShadow","strokeWeight","lineWidth","clear","fillRect","clearRect","rectMode","rect","tl","tr","br","bl","hw","hh","beginPath","moveTo","arcTo","closePath","triangle","lineTo","circle","radius","arc","Math","PI","line","x1","y1","x2","y2","begin","close","from","to","image","img","sx","sy","sw","sh","dx","dy","dw","dh","complete","arguments","setTimeout","textAlign","textBaseline","textFont","textSize","size","text","str","join","fillText","strokeText","blendMode","globalCompositeOperation","alpha","globalAlpha","translate","rotate","deg","transRot","push","save","pop","restore","smooth","qulty","imageSmoothingEnabled","imageSmoothingQuality","noSmooth","loadImage","url","Image","src","onload","loadJSON","callback","xhr","XMLHttpRequest","open","readyState","status","responseText","send","drawJSON","json","apply","rgba","keyIsPressed","CURRENT_KEYS","global","getWindowSize","WINDOW_WIDTH","WINDOW_HEIGHT","clamp","rgb","hsla","hsl","randomRGB","_r","_g","_b","randomInt","randomHSLA","_h","_s","_l","_a","radians","norm","min","max","lerp","map","sMin","sMax","dMin","dMax","dist","px","py","qx","qy","sqrt","random","floor","tween","pos","target","speed","checkType","type","constructor","toString","toLowerCase","indexOf","optional","optValue","intersects","r1","r2","r1x","r1xw","r1y","r1yh","r2x","r2xw","r2y","r2yh","mouseX","mouseY","mouseDown","e","offsetX","offsetY","KEY_W","KEY_A","KEY_S","KEY_D","KEY_SPACE","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","code","keyCode","which","onKeyPressed","ADD","DIFFERENCE","EXCLUSION","SCREEN","XOR","COPY","SRC_OVER","SRC_OUT","SRC_IN","SRC_TOP","DEST_OVER","DEST_OUT","DEST_IN","DEST_TOP","CENTER","MIDDLE","CORNER","Function"],"mappings":"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","file":"Candy.build.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Candy\"] = factory();\n\telse\n\t\troot[\"Candy\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * Candy.js\r\n * @version v1.6.0\r\n * @description Easy to use canvas renderer similar\r\n * @constructor Candy()\r\n * @author Anurag Hazra <hazru.anurag@gmail.com>\r\n * @param {string?} canvas \r\n * @param {Number?} width \r\n * @param {Number?} height \r\n */\r\nfunction Candy(canvas, width, height) {\r\n  // optional constructor\r\n  if (!(this instanceof Candy)) {\r\n    return new Candy(canvas);\r\n  };\r\n\r\n  if (canvas !== undefined) {\r\n    if (typeof canvas === 'string') {\r\n      this.canvas = document.querySelector(canvas);\r\n    } else {\r\n      this.canvas = canvas;\r\n    }\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.width = width;\r\n    this.height = height;\r\n    this.canvas.width = CANVAS_WIDTH = this.width;\r\n    this.canvas.height = CANVAS_HEIGHT = this.height;\r\n  }\r\n\r\n  // Variables\r\n  this.idIndex = 0;\r\n  this.screenBuffers = {};\r\n  this.fireCallback = false;\r\n  this.resCount = 0;\r\n  // Rendering States\r\n  this.doFill = true;\r\n  this.doStroke = true;\r\n  this.rectmode = 'CORNER';\r\n  this.font = ['24px', 'Arial'];\r\n  this.animateLoop = true;\r\n\r\n  this.preload = function(){return null};\r\n\r\n\r\n  this.trypreload();\r\n\r\n  this._initCanvas();\r\n\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.trypreload();\r\n * preloads all the resources\r\n */\r\nCandy.prototype.trypreload = function() {\r\n  if (window.preload || this.preload) {\r\n    var timer = window.setInterval(function () {\r\n      if (this.resCount <= 0) {\r\n        var time = (performance.now() / 1000).toFixed(2);\r\n        console.log('%cAll Resources Loaded in ' + time + 's', 'color : green');\r\n        ((window.preload === undefined) ? this.preload : window.preload)();\r\n        window.clearInterval(timer);\r\n        return;\r\n      }\r\n    }.bind(this), 10);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.resize()\r\n * @param {Boolean} cull\r\n */\r\nCandy.prototype.resize = function (cull) {\r\n  window.addEventListener('resize', function () {\r\n    this.resizeCanvas(this.canvas, cull);\r\n  }.bind(this));\r\n  this.resizeCanvas(this.canvas, cull);\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.createCanvas()\r\n * @param {Number} w \r\n * @param {Number} h \r\n * creates a new Canvas Element with defined Width and Height\r\n */\r\nCandy.prototype.createCanvas = function (w, h) {\r\n  this.canvas = document.createElement('canvas');\r\n  this.canvas.id = 'CandyCanvas-' + this.idIndex;\r\n  this.canvas.width = w || 200;\r\n  this.canvas.height = h || 200;\r\n  CANVAS_WIDTH = this.canvas.width;\r\n  CANVAS_HEIGHT = this.canvas.height;\r\n  this.ctx = this.canvas.getContext('2d');\r\n  document.body.appendChild(this.canvas);\r\n\r\n  this.index++;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.createScreenBuffer()\r\n * @param {String} name \r\n * @param {Number} width \r\n * @param {Number} height \r\n * creates a new screenBuffer Element with defined Width and Height\r\n */\r\nCandy.prototype.createScreenBuffer = function (name, width, height) {\r\n  let canvas = document.createElement('canvas');\r\n  canvas.id = 'CandyCanvasOffscreen-' + this.idIndex;\r\n  canvas.width = width || this.canvas.width;\r\n  canvas.height = height || this.canvas.height;\r\n  // this.resizeCanvas(canvas);\r\n  this.screenBuffers[name] = new Candy(canvas, canvas.width, canvas.height);\r\n  return this.screenBuffers[name];\r\n}\r\n\r\n/**\r\n * @method Candy.putScreenBuffer()\r\n * @param {imageData} data \r\n * puts the screenBuffer data into main canvas\r\n */\r\nCandy.prototype.putScreenBuffer = function (data) {\r\n  this.ctx.drawImage(data.canvas, 0, 0);\r\n}\r\n\r\n/**\r\n * @method Candy._initCanvas();\r\n * fires window.animate callback when startup\r\n */\r\nCandy.prototype._initCanvas = function () {\r\n  window.addEventListener('DOMContentLoaded', function () {\r\n    if (window.animate && this.fireCallback) {\r\n      animate();\r\n    }\r\n  }.bind(this));\r\n}\r\n\r\n/**\r\n * @method Candy.noLoop();\r\n * stops animation loop\r\n */\r\nCandy.prototype.noLoop = function () {\r\n  this.animateLoop = false;\r\n}\r\n\r\n/**\r\n * @method Candy.loop()\r\n * @param {Function} func \r\n * starts animation loop\r\n */\r\nCandy.prototype.loop = function (func) {\r\n  if (this.animateLoop) {\r\n    if (window.animate) {\r\n      return requestAnimationFrame(animate);\r\n    } else {\r\n      return requestAnimationFrame(func)\r\n    }\r\n  } else {\r\n    this.animateLoop = true;\r\n  }\r\n  // return requestAnimationFrame(func);\r\n}\r\n\r\n/**\r\n * @method Candy.resizeCanvas()\r\n * @param {Element} canvas \r\n * @param {Boolean} cull \r\n * resizes the canvas with 16:9 aspect ratio\r\n */\r\nCandy.prototype.resizeCanvas = function (canvas, cull) {\r\n  let targetHeight = window.innerWidth * 9 / 16;\r\n\r\n  if (window.innerHeight > targetHeight) {\r\n    if (cull) {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = targetHeight;\r\n    } else {\r\n      canvas.style.width = window.innerWidth + 'px';\r\n      canvas.style.height = targetHeight + 'px';\r\n    }\r\n    canvas.style.left = '0px';\r\n    canvas.style.top = (window.innerHeight - targetHeight) / 2 + 'px';\r\n  } else {\r\n    if (cull) {\r\n      canvas.width = window.innerHeight * 16 / 9;\r\n      canvas.height = window.innerHeight;\r\n    } else {\r\n      canvas.style.width = window.innerHeight * 16 / 9 + 'px';\r\n      canvas.style.height = window.innerHeight + 'px';\r\n    }\r\n    canvas.style.left = (window.innerWidth - (canvas.width)) / 2 + 'px';\r\n    canvas.style.top = '0px';\r\n  }\r\n}\r\n\r\nmodule.exports = Candy;\r\n","const Candy = require('./core');\r\nrequire('./renderer');\r\nrequire('./io');\r\nrequire('./utils');\r\nrequire('./globals');\r\n\r\nmodule.exports = Candy;","const Candy = require('./core');\r\n\r\n/**\r\n * @method Candy.noFill()\r\n */\r\nCandy.prototype.noFill = function () {\r\n  this.doFill = false;\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.noStroke()\r\n */\r\nCandy.prototype.noStroke = function () {\r\n  this.doStroke = false;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.fill()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.fill = function (r, g, b, a) {\r\n  let color = this._parseColor(r, g, b, a)\r\n\r\n  // Gradient\r\n  if (typeof r === 'object' && !(r instanceof CanvasGradient)) {\r\n    let grad = c.ctx.createLinearGradient(100, 0, 0, 100);\r\n    for (let i = 0; i < r.length; i++) {\r\n      grad.addColorStop(i / r.length, r[i]);\r\n    }\r\n    this.ctx.fillStyle = grad;\r\n    this.doFill = true;\r\n    return true;\r\n  }\r\n\r\n  this.ctx.fillStyle = color;\r\n  this.doFill = true;\r\n  if (r === undefined) {\r\n    this.ctx.fill();\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.fill()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.stroke = function (r, g, b, a) {\r\n  let color = this._parseColor(r, g, b, a);\r\n\r\n  // Gradient\r\n  if (typeof r === 'object' && !(r instanceof CanvasGradient)) {\r\n    let grad = c.ctx.createLinearGradient(100, 0, 0, 100);\r\n    for (let i = 0; i < r.length; i++) {\r\n      grad.addColorStop(i / r.length, r[i]);\r\n    }\r\n    this.ctx.strokeStyle = grad;\r\n    this.doStroke = true;\r\n    return true\r\n  }\r\n  this.ctx.strokeStyle = color;\r\n  this.doStroke = true;\r\n  if (r === undefined) {\r\n    this.ctx.stroke();\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.linearGradient()\r\n * @param {String} x \r\n * @param {String} y \r\n * @param {String} a \r\n * @param {String} s \r\n * @param {Array} colors \r\n */\r\nCandy.prototype.linearGradient = function (x, y, a, s, colors) {\r\n  let grad = this.ctx.createLinearGradient(x, y, a, s);\r\n  for (let i = 0; i < colors.length; i++) {\r\n    let ratio = i / colors.length\r\n    let percent = colors[i].split('-');\r\n    if (percent[1] !== undefined) {\r\n      ratio = percent[1];\r\n    }\r\n    grad.addColorStop(ratio, percent[0]);\r\n  }\r\n  return grad;\r\n}\r\n\r\n/**\r\n * @method Candy.radialGradient()\r\n * @param {String} x \r\n * @param {String} y \r\n * @param {String} innerRadius \r\n * @param {String} outerRadius \r\n * @param {Array} colors \r\n */\r\nCandy.prototype.radialGradient = function (x, y, innerRadius, outerRadius, colors) {\r\n  let grad = this.ctx.createRadialGradient(x, y, innerRadius, x, y, outerRadius);\r\n  for (let i = 0; i < colors.length; i++) {\r\n    let ratio = i / colors.length\r\n    let percent = colors[i].split('-');\r\n    if (percent[1] !== undefined) {\r\n      ratio = percent[1];\r\n    }\r\n    grad.addColorStop(ratio, percent[0]);\r\n  }\r\n  return grad;\r\n}\r\n\r\nCandy.prototype.shadow = function(x, y, blur, color) {\r\n  this.ctx.shadowColor = color || \"rgba(100,100,100,.4)\";\r\n  this.ctx.shadowOffsetX = x || 0;\r\n  this.ctx.shadowOffsetY = y || 0;\r\n  this.ctx.shadowBlur = blur || 0;\r\n}\r\n\r\nCandy.prototype.noShadow = function() {\r\n  this.ctx.shadowColor = \"rgba(0, 0, 0, 0)\";\r\n  this.ctx.shadowOffsetX = 0;\r\n  this.ctx.shadowOffsetY = 0;\r\n  this.ctx.shadowBlur = 0;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.strokeWeight()\r\n * @param {Number} width \r\n */\r\nCandy.prototype.strokeWeight = function (width) {\r\n  this.ctx.lineWidth = width;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.clear()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.clear = function (r, g, b, a) {\r\n  let c = this._parseColor(r, g, b, a);\r\n  if (c) {\r\n    this.ctx.fillStyle = c;\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    return this;\r\n  } else {\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    return this;\r\n  }\r\n}\r\n\r\nCandy.prototype.rectMode = function (mode) {\r\n  this.rectmode = mode;\r\n}\r\n\r\n/**\r\n * @method Candy.rect()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w \r\n * @param {Number} h \r\n * @param {Number} tl \r\n * @param {Number} tr \r\n * @param {Number} br \r\n * @param {Number} bl \r\n */\r\nCandy.prototype.rect = function (x, y, w, h, tl, tr, br, bl) {\r\n  if (h === undefined) { h = w };\r\n  if (tr === undefined) { tr = tl };\r\n  if (br === undefined) { br = tr };\r\n  if (bl === undefined) { bl = br };\r\n  let hw = w/2;\r\n  let hh = h/2;\r\n  if (tl) {\r\n    this.ctx.beginPath();\r\n    if (this.rectmode === 'center') {\r\n      this.ctx.moveTo(x-hw + tl, y-hh);\r\n      this.ctx.arcTo(x-hw + w, y-hh, x-hw + w, y-hh + h, tr);\r\n      this.ctx.arcTo(x-hw + w, y-hh + h, x-hw, y-hh + h, br);\r\n      this.ctx.arcTo(x-hw, y-hh + h, x-hw, y-hh, bl);\r\n      this.ctx.arcTo(x-hw, y-hh, x-hw + w, y-hh, tl);\r\n    } else {\r\n      this.ctx.moveTo(x + tl, y);\r\n      this.ctx.arcTo(x + w, y, x + w, y + h, tr);\r\n      this.ctx.arcTo(x + w, y + h, x, y + h, br);\r\n      this.ctx.arcTo(x, y + h, x, y, bl);\r\n      this.ctx.arcTo(x, y, x + w, y, tl);\r\n    }\r\n\r\n    this.doFill && this.ctx.fill();\r\n    this.doStroke && this.ctx.stroke();\r\n    this.ctx.closePath();\r\n    return this;\r\n  } else {\r\n    this.ctx.beginPath();\r\n    if (this.rectmode === 'center') {\r\n      this.ctx.rect(x - w / 2, y - h / 2, w, h);\r\n    } else {\r\n      this.ctx.rect(x, y, w, h);\r\n    }\r\n\r\n    this.doFill && this.ctx.fill();\r\n    this.doStroke && this.ctx.stroke();\r\n\r\n    this.ctx.closePath();\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.triangle()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w \r\n * @param {Number} h\r\n */\r\nCandy.prototype.triangle = function (x, y, w, h) {\r\n  this.ctx.beginPath();\r\n  this.ctx.moveTo(x, y);\r\n  this.ctx.lineTo(x + (w / 2), y - h);\r\n  this.ctx.lineTo(x + w, y);\r\n  this.ctx.closePath();\r\n\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n}\r\n\r\n/**\r\n * @method Candy.circle()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} radius\r\n */\r\nCandy.prototype.circle = function (x, y, radius) {\r\n  this.ctx.beginPath();\r\n  this.ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n  this.ctx.closePath();\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.line()\r\n * @param {Number} x1\r\n * @param {Number} y2\r\n * @param {Number} x2\r\n * @param {Number} y2\r\n */\r\nCandy.prototype.line = function (x1, y1, x2, y2) {\r\n  this.ctx.beginPath();\r\n  this.ctx.moveTo(x1, y1);\r\n  this.ctx.lineTo(x2, y2);\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n  this.ctx.closePath();\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.begin()\r\n */\r\nCandy.prototype.begin = function () {\r\n  this.ctx.beginPath();\r\n}\r\n\r\n/**\r\n * @method Candy.close()\r\n */\r\nCandy.prototype.close = function () {\r\n  this.ctx.closePath();\r\n}\r\n\r\n/**\r\n * @method Candy.from()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.from = function (x, y) {\r\n  console.log(typeof x)\r\n  if (typeof x === 'object') {\r\n    this.ctx.moveTo(x.x, x.y)\r\n  }\r\n  this.ctx.moveTo(x, y);\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.to()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.to = function (x, y) {\r\n  if (typeof x === 'object') {\r\n    this.ctx.lineTo(x.x, x.y)\r\n  }\r\n  this.ctx.lineTo(x, y)\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.image()\r\n * @param {Image} img\r\n * @param {Number} sx\r\n * @param {Number} sy\r\n * @param {Number} sw\r\n * @param {Number} sh\r\n * @param {Number} dx\r\n * @param {Number} dy\r\n * @param {Number} dw\r\n * @param {Number} dh\r\n */\r\nCandy.prototype.image = function (img, sx, sy, sw, sh, dx, dy, dw, dh) {\r\n  if (!img.complete) {\r\n    window.setTimeout(() => {\r\n      if (arguments.length === 5) {\r\n        this.image(img, sx, sy, sw, sh);\r\n      } else {\r\n        this.image(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n      }\r\n    }, 50);\r\n    return;\r\n  }\r\n  if (arguments.length === 5) {\r\n    this.ctx.drawImage(img, sx, sy, sw, sh);\r\n  } else {\r\n    this.ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.textAlign()\r\n * @param {String} value\r\n */\r\nCandy.prototype.textAlign = function (value) {\r\n  this.ctx.textAlign = value;\r\n}\r\n\r\n/**\r\n * @method Candy.textBaseline()\r\n * @param {String} value\r\n */\r\nCandy.prototype.textBaseline = function (value) {\r\n  this.ctx.textBaseline = value;\r\n}\r\n\r\n/**\r\n * @method Candy.textFont()\r\n * @param {String} value\r\n */\r\nCandy.prototype.textFont = function (font) {\r\n  this.font[1] = font;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.textSize()\r\n * @param {Number} value\r\n */\r\nCandy.prototype.textSize = function (size) {\r\n  this.font[0] = size + 'px';\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.text()\r\n * @param {String} str\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w\r\n * @param {Number} h\r\n */\r\nCandy.prototype.text = function (str, x, y, w, h) {\r\n  // this.ctx.textAlign = 'end';\r\n  // this.ctx.textBaseline = 'bottom';\r\n  this.ctx.font = this.font.join(' ');\r\n  this.doFill && this.ctx.fillText(str, x, y, w, h)\r\n  this.doStroke && this.ctx.strokeText(str, x, y, w, h)\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.blendMode()\r\n * @param {Number} mode\r\n */\r\nCandy.prototype.blendMode = function (mode) {\r\n  this.ctx.globalCompositeOperation = mode;\r\n}\r\n\r\n/**\r\n * @method Candy.alpha()\r\n * @param {Float} value\r\n */\r\nCandy.prototype.alpha = function (value) {\r\n  this.ctx.globalAlpha = value;\r\n}\r\n\r\n/**\r\n * @method Candy.translate()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.translate = function (x, y) {\r\n  if (y === undefined) { y = x }\r\n  this.ctx.translate(x, y);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.rotate()\r\n * @param {Number} deg\r\n */\r\nCandy.prototype.rotate = function (deg) {\r\n  this.ctx.rotate(deg);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.transRot()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} deg\r\n */\r\nCandy.prototype.transRot = function (x, y, deg) {\r\n  this.ctx.translate(x, y);\r\n  this.ctx.rotate(deg);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.push()\r\n */\r\nCandy.prototype.push = function () {\r\n  this.ctx.save();\r\n}\r\n\r\n/**\r\n * @method Candy.pop()\r\n */\r\nCandy.prototype.pop = function () {\r\n  this.ctx.restore();\r\n}\r\n\r\n/**\r\n * @method Candy.smooth()\r\n * @param {String} qulty\r\n */\r\nCandy.prototype.smooth = function (qulty) {\r\n  if ('imageSmoothingEnabled' in this.ctx) {\r\n    this.ctx.imageSmoothingEnabled = true;\r\n    this.ctx.imageSmoothingQuality = qulty;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.noSmooth()\r\n */\r\nCandy.prototype.noSmooth = function () {\r\n  if ('imageSmoothingEnabled' in this.ctx) {\r\n    this.ctx.imageSmoothingEnabled = false;\r\n  }\r\n}\r\n\r\nmodule.exports = Candy;","const Candy = require('./core');\r\n\r\n/**\r\n * @method Candy.loadImage()\r\n * @param {String} url \r\n * @return HTMLImageElement\r\n */\r\nCandy.prototype.loadImage = function (url) {\r\n  this.resCount++;\r\n  let img = new Image();\r\n  img.src = url;\r\n  img.onload = function () { this.resCount--; }.bind(this);\r\n  return img;\r\n}\r\n\r\n/**\r\n * @method Candy.loadJSON()\r\n * @param {String} url\r\n * @param {Function} callback\r\n * loads a JSON file\r\n */\r\nCandy.prototype.loadJSON = function (url, callback) {\r\n  this.resCount++;\r\n  let xhr = new XMLHttpRequest();\r\n\r\n  xhr.open('GET', url, true);\r\n  xhr.onload = () => {\r\n    this.resCount--;\r\n    if (xhr.readyState === 4 && xhr.status === 200) {\r\n      callback(null, xhr.responseText);\r\n    } else {\r\n      callback('Error loading JSON', null);\r\n    }\r\n  }\r\n  xhr.send();\r\n\r\n}\r\n\r\n/**\r\n * @method Candy.drawJSON()\r\n * @param {JSON} json \r\n * draws a JSON file\r\n */\r\nCandy.prototype.drawJSON = function (json) {\r\n  for (const i in json) {\r\n    let key = (i).split('-')[0];\r\n    switch (key) {\r\n      case 'fill':\r\n        this[key](json[key])\r\n        break;\r\n      case 'stroke':\r\n        this[key](json[key])\r\n        break;\r\n\r\n      // do defaults \r\n      default:\r\n        if (typeof json[key] === 'object') {\r\n          this[key].apply(this, json[key])\r\n        } else {\r\n          this[key].call(this, json[key])\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Candy;\r\n","const Candy = require('./core');\r\n\r\n/**\r\n * @method Candy._parseColor()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype._parseColor = function (r, g, b, a) {\r\n  let color = r;\r\n  if (typeof r === 'number') {\r\n    color = rgba(r, g, b);\r\n  }\r\n  if (typeof r === 'number' && (g) && (!b) && (!a)) {\r\n    a = g;\r\n    color = rgba(r, r, r, g)\r\n  }\r\n  if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\r\n    color = rgba(r, g, b, a)\r\n  }\r\n  return color;\r\n}\r\n\r\n/**\r\n * @method Candy.keyIsPressed()\r\n * @param {Number} key\r\n */\r\nCandy.prototype.keyIsPressed = function (key) {\r\n  // console.log(key, CURRENT_KEYS[key])\r\n  if (CURRENT_KEYS[key] === true) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nmodule.exports = Candy;\r\n","/**\r\n * @method rgba()\r\n * @global\r\n * @param {String|Number} r \r\n * @param {String|Number?} g \r\n * @param {String|Number?} b \r\n * @param {String|Number?} a\r\n */\r\nglobal.rgba = function(r, g, b, a) {\r\n  if (g === undefined) g = r;\r\n  if (b === undefined) b = r;\r\n  if (a === undefined) a = 1;\r\n  if (a > 1) { a = a / 255 };\r\n  return 'rgba(' + clamp(r, 0, 255) + ',' + clamp(g, 0, 255) + ',' + clamp(b, 0, 255) + ',' + clamp(a, 0, 1) + ')'\r\n}\r\n\r\n/**\r\n * @method rgb()\r\n * @global\r\n * @param {String|Number} r \r\n * @param {String|Number?} g \r\n * @param {String|Number?} b\r\n */\r\nglobal.rgb = function(r, g, b) {\r\n  if (g === undefined) g = r;\r\n  if (b === undefined) b = r;\r\n  return 'rgb(' + clamp(r, 0, 255) + ',' + clamp(g, 0, 255) + ',' + clamp(b, 0, 255) + ')'\r\n}\r\n\r\n/**\r\n * @method hsla()\r\n * @global\r\n * @param {Number} h \r\n * @param {Number} s \r\n * @param {Number} l\r\n * @param {Number} a\r\n */\r\nglobal.hsla = function(h, s, l, a) {\r\n  return 'hsla(' + h + 'deg, ' + clamp(s, 0, 100) + '%, ' + clamp(l, 0, 100) + '%, ' + ((a === undefined) ? 1 : a) + ')';\r\n};\r\n\r\n/**\r\n * @method hsl()\r\n * @global\r\n * @param {Number} h \r\n * @param {Number} s \r\n * @param {Number} l\r\n */\r\nglobal.hsl = function(h, s, l) {\r\n  return 'hsl(' + h + 'deg, ' + clamp(s, 0, 100) + '%, ' + clamp(l, 0, 100) + '%)';\r\n};\r\n\r\n/**\r\n * @method randomRGB()\r\n * @global\r\n * @param {Number?} _r\r\n * @param {Number?} _g \r\n * @param {Number?} _g\r\n */\r\nglobal.randomRGB = function(_r, _g, _b) {\r\n  let r = randomInt(_r || 255);\r\n  let g = randomInt(_g || 255);\r\n  let b = randomInt(_b || 255);\r\n  return rgb(r, g, b)\r\n}\r\n\r\n/**\r\n * @method randomHSLA()\r\n * @global\r\n * @param {Number?} _h\r\n * @param {Number?} _s\r\n * @param {Number?} _l\r\n * @param {Number?} _a \r\n */\r\nglobal.randomHSLA = function(_h, _s, _l, _a) {\r\n  let h = randomInt(_h || 360);\r\n  let s = randomInt(_s || 100);\r\n  let l = randomInt(_l || 100);\r\n  let a = (_a === undefined) ? 1 : _a;\r\n  return hsla(h, s, l, a);\r\n}\r\n\r\n/**\r\n * @method radians()\r\n * @global\r\n * @param {Number?} a\r\n */\r\nglobal.radians = function radians(a) {\r\n  return a * Math.PI/180;\r\n}\r\n\r\n/**\r\n * @method norm()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.norm = function(value, min, max) {\r\n  return (value - min) / (max - min);\r\n}\r\n\r\n/**\r\n * @method lerp()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.lerp = function(norm, min, max) {\r\n  return (max - min) * norm + min;\r\n}\r\n\r\n/**\r\n * @method map()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} sMin\r\n * @param {Number} sMax\r\n * @param {Number} dMin\r\n * @param {Number} dMax\r\n */\r\nglobal.map = function(value, sMin, sMax, dMin, dMax) {\r\n  return this.lerp(this.norm(value, sMin, sMax), dMin, dMax)\r\n}\r\n\r\n/**\r\n * @method dist()\r\n * @global\r\n * @param {Number} px\r\n * @param {Number} py\r\n * @param {Number} qx\r\n * @param {Number} qy\r\n */\r\nglobal.dist = function(px, py, qx, qy) {\r\n  let dx = px - qx;\r\n  let dy = py - qy;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\n/**\r\n * @method random()\r\n * @global\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.random = function(min, max) {\r\n  if (max === undefined) {\r\n    return Math.random() * (min === undefined ? 1 : min);\r\n  } else {\r\n    return min + Math.random() * (max - min);\r\n  }\r\n}\r\n\r\n/**\r\n * @method randomInt()\r\n * @global\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.randomInt = function(min, max) {\r\n  return Math.floor(random(min, max))\r\n}\r\n\r\n/**\r\n * @method clamp()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.clamp = function(value, min, max) {\r\n  return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\r\n}\r\n\r\n/**\r\n * @method tween()\r\n * @global\r\n * @param {Number} pos\r\n * @param {Number} target\r\n * @param {Number} speed\r\n */\r\nglobal.tween = function(pos, target, speed) {\r\n  if (speed == undefined) speed = 20;\r\n  pos += (target - pos) / speed;\r\n  return pos;\r\n}\r\n\r\n/**\r\n * @method checkType()\r\n * @global\r\n * @param {*} value\r\n * @param {*} type\r\n */\r\nglobal.checkType = function(value, type) {\r\n  if (value === undefined) { return };\r\n  if (typeof value === 'object') {\r\n    let checkObjects = value.constructor.toString().toLowerCase().indexOf(type + '()');\r\n    if (checkObjects === -1) {\r\n      throw ('Type Cheking Error : (' + (typeof value) + ' ' + value + ')' + ' is not typeof ' + type)\r\n    } else {\r\n      return value;\r\n    }\r\n  } else {\r\n    if (typeof value !== type) {\r\n      throw ('Type Cheking Error : (' + (typeof value) + ' ' + value + ')' + ' is not typeof ' + type)\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @method optional()\r\n * @global\r\n * @param {*} value\r\n * @param {*} optValue\r\n */\r\nglobal.optional = function(value, optValue) {\r\n  if (value === undefined) {\r\n    value = optValue\r\n  };\r\n  return value;\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @method intersects()\r\n * @param {Object} r1\r\n * @param {Object} r2\r\n * @returns {Boolean} !collides\r\n */\r\nglobal.intersects = function(r1, r2) {\r\n  let r1x = r1.x;\r\n  let r1xw = r1.x + r1.width;\r\n  let r1y = r1.y;\r\n  let r1yh = r1.y + r1.height;\r\n\r\n  let r2x = r2.x;\r\n  let r2xw = r2.x + r2.width;\r\n  let r2y = r2.y;\r\n  let r2yh = r2.y + r2.height;\r\n\r\n  if (!r1.width || !r1.height) {\r\n    r1xw = r1.x;\r\n    r1yh = r1.y;\r\n    // console.log('rect1 is a point');\r\n  }\r\n  if (!r2.width || !r2.height) {\r\n    r2xw = r2.x;\r\n    r2yh = r2.y;\r\n    // console.log('rect2 is a point');\r\n  }\r\n  if ((!r1.width || !r1.height) && (!r2.width || !r2.height)) {\r\n    // console.log('Cant Resolve Both Objects As Point');\r\n  }\r\n  return !(\r\n    r2x >= r1xw ||\r\n    r1x >= r2xw ||\r\n    r2y >= r1yh ||\r\n    r1y >= r2yh\r\n  )\r\n}\r\n\r\n\r\n\r\n/**\r\n * GLOBAL VARIABLES\r\n */\r\n\r\n// Mouse Listeners //\r\nglobal.mouseX = 0;\r\nglobal.mouseY = 0;\r\nglobal.mouseDown = false;\r\nwindow.addEventListener('mousemove', function (e) {\r\n  global.mouseX = e.offsetX;\r\n  global.mouseY = e.offsetY;\r\n});\r\nwindow.addEventListener('mousedown', function () {\r\n  global.mouseDown = true;\r\n});\r\nwindow.addEventListener('mouseup', function () {\r\n  global.mouseDown = false;\r\n});\r\n\r\n// Keyboard Listeners //\r\nglobal.CURRENT_KEYS = {};\r\nglobal.KEY_W = 87;\r\nglobal.KEY_A = 65;\r\nglobal.KEY_S = 83;\r\nglobal.KEY_D = 68;\r\nglobal.KEY_SPACE = 32;\r\n\r\nglobal.ARROW_UP = 38;\r\nglobal.ARROW_DOWN = 40;\r\nglobal.ARROW_LEFT = 37;\r\nglobal.ARROW_RIGHT = 39;\r\nwindow.addEventListener('keydown', function (e) {\r\n  global.code = e.keyCode || e.which;\r\n  global.CURRENT_KEYS[code] = true;\r\n  if (window.onKeyPressed) {\r\n    global.onKeyPressed(code, e);\r\n  }\r\n})\r\nwindow.addEventListener('keyup', function (e) {\r\n  global.code = e.keyCode || e.which;\r\n  global.CURRENT_KEYS[code] = false;\r\n})\r\n\r\n\r\n\r\nglobal.CANVAS_WIDTH = 0;\r\nglobal.CANVAS_HEIGHT = 0;\r\nglobal.WINDOW_WIDTH = 0;\r\nglobal.WINDOW_HEIGHT = 0;\r\nfunction getWindowSize() {\r\n  global.WINDOW_WIDTH = window.innerWidth - 6;\r\n  global.WINDOW_HEIGHT = window.innerHeight - 6;\r\n}\r\ngetWindowSize();\r\nwindow.addEventListener('resize', getWindowSize);\r\n\r\n\r\n\r\n// BlendModes\r\nglobal.ADD = 'lighter';\r\nglobal.DIFFERENCE = 'difference';\r\nglobal.EXCLUSION = 'exclusion';\r\nglobal.SCREEN = 'screen';\r\nglobal.XOR = 'xor';\r\nglobal.COPY = 'copy';\r\n\r\nglobal.SRC_OVER = 'source-over';\r\nglobal.SRC_OUT = 'source-out';\r\nglobal.SRC_IN = 'source-in';\r\nglobal.SRC_TOP = 'source-atop';\r\n\r\nglobal.DEST_OVER = 'destination-over';\r\nglobal.DEST_OUT = 'destination-out';\r\nglobal.DEST_IN = 'destination-in';\r\nglobal.DEST_TOP = 'destination-atop';\r\n\r\n// TEXT\r\nglobal.CENTER = 'center';\r\nglobal.MIDDLE = 'middle';\r\nglobal.CORNER = 'corner';","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}