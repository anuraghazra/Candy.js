{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/globals.js","webpack:///./src/utils.js","webpack:///./src/io.js","webpack:///./src/renderer.js","webpack:///./src/core.js","webpack:///./src/app.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","global","getWindowSize","WINDOW_WIDTH","innerWidth","WINDOW_HEIGHT","innerHeight","rgba","b","a","undefined","clamp","hsla","h","randomRGB","randomInt","randomHSLA","radians","Math","PI","norm","min","max","lerp","map","sMin","sMax","dMin","dMax","dist","px","py","qx","qy","dx","dy","sqrt","random","floor","tween","pos","target","speed","checkType","type","constructor","toString","toLowerCase","indexOf","optional","optValue","intersects","r1","r2","r1x","x","r1xw","width","r1y","y","r1yh","height","r2x","r2xw","r2y","r2yh","mouseX","mouseY","mouseDown","addEventListener","offsetX","offsetY","CURRENT_KEYS","KEY_W","KEY_A","KEY_S","KEY_D","KEY_SPACE","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","code","keyCode","which","onKeyPressed","CANVAS_WIDTH","CANVAS_HEIGHT","ADD","DIFFERENCE","EXCLUSION","SCREEN","XOR","COPY","SRC_OVER","SRC_OUT","SRC_IN","SRC_TOP","DEST_OVER","DEST_OUT","DEST_IN","DEST_TOP","CENTER","MIDDLE","CORNER","Candy","_parseColor","color","keyIsPressed","loadImage","url","resCount","img","Image","src","onload","loadJSON","callback","xhr","XMLHttpRequest","open","readyState","status","responseText","send","drawJSON","json","split","apply","noFill","doFill","noStroke","doStroke","fill","CanvasGradient","grad","ctx","createLinearGradient","length","addColorStop","fillStyle","stroke","strokeStyle","linearGradient","colors","ratio","percent","radialGradient","innerRadius","outerRadius","createRadialGradient","shadow","blur","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","noShadow","strokeWeight","lineWidth","clear","fillRect","canvas","clearRect","rectMode","rectmode","rect","w","tl","tr","br","bl","hw","hh","beginPath","moveTo","arcTo","closePath","triangle","lineTo","circle","radius","arc","line","x1","y1","x2","y2","begin","close","from","console","log","to","image","sx","sy","sw","sh","dw","dh","complete","arguments","drawImage","setTimeout","textAlign","textBaseline","textFont","font","textSize","size","text","str","join","fillText","strokeText","blendMode","globalCompositeOperation","alpha","globalAlpha","translate","rotate","deg","transRot","push","save","pop","restore","smooth","qulty","imageSmoothingEnabled","imageSmoothingQuality","noSmooth","document","querySelector","getContext","idIndex","screenBuffers","fireCallback","animateLoop","preload","trypreload","_initCanvas","timer","setInterval","time","performance","now","toFixed","clearInterval","resize","cull","resizeCanvas","createCanvas","createElement","id","body","appendChild","index","createScreenBuffer","putScreenBuffer","data","animate","noLoop","loop","func","requestAnimationFrame","targetHeight","style","left","top"],"mappings":"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","file":"Candy.build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\r\n * Global Utility\r\n */\r\n\r\nglobal.rgba = function(r, g, b, a) {\r\n  if (g === undefined) g = r;\r\n  if (b === undefined) b = r;\r\n  if (a === undefined) a = 1;\r\n  if (a > 1) { a = a / 255 };\r\n  return 'rgba(' + clamp(r, 0, 255) + ',' + clamp(g, 0, 255) + ',' + clamp(b, 0, 255) + ',' + clamp(a, 0, 1) + ')'\r\n}\r\n\r\nglobal.hsla = function(h, s, l, a) {\r\n  return 'hsla(' + h + 'deg, ' + clamp(s, 0, 100) + '%, ' + clamp(l, 0, 100) + '%, ' + ((a === undefined) ? 1 : a) + ')';\r\n};\r\n\r\nglobal.randomRGB = function() {\r\n  let r = randomInt(255);\r\n  let g = randomInt(255);\r\n  let b = randomInt(255);\r\n  return rgba(r, g, b)\r\n}\r\n\r\nglobal.randomHSLA = function(a) {\r\n  let h = randomInt(360);\r\n  let s = randomInt(100);\r\n  let l = randomInt(100);\r\n  a = (a === undefined) ? 1 : a;\r\n  return hsla(h, s, l, a);\r\n}\r\n\r\nglobal.radians = function radians(a) {\r\n  return a * Math.PI/180;\r\n}\r\n\r\nglobal.norm = function(value, min, max) {\r\n  return (value - min) / (max - min);\r\n}\r\n\r\nglobal.lerp = function(norm, min, max) {\r\n  return (max - min) * norm + min;\r\n}\r\n\r\nglobal.map = function(value, sMin, sMax, dMin, dMax) {\r\n  return this.lerp(this.norm(value, sMin, sMax), dMin, dMax)\r\n}\r\n\r\nglobal.dist = function(px, py, qx, qy) {\r\n  let dx = px - qx;\r\n  let dy = py - qy;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\nglobal.random = function(min, max) {\r\n  if (max === undefined) {\r\n    return Math.random() * (min === undefined ? 1 : min);\r\n  } else {\r\n    return min + Math.random() * (max - min);\r\n  }\r\n}\r\n\r\nglobal.randomInt = function(min, max) {\r\n  return Math.floor(min + Math.random() * (((max === undefined) ? 0 : max) - min + 1))\r\n}\r\n\r\nglobal.clamp = function(value, min, max) {\r\n  return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\r\n}\r\n\r\nglobal.tween = function(pos, target, speed) {\r\n  if (speed == undefined) speed = 20;\r\n  pos += (target - pos) / speed;\r\n  return pos;\r\n}\r\n\r\nglobal.checkType = function(value, type) {\r\n  if (value === undefined) { return };\r\n  if (typeof value === 'object') {\r\n    let checkObjects = value.constructor.toString().toLowerCase().indexOf(type + '()');\r\n    if (checkObjects === -1) {\r\n      throw ('Type Cheking Error : (' + (typeof value) + ' ' + value + ')' + ' is not typeof ' + type)\r\n    } else {\r\n      return value;\r\n    }\r\n  } else {\r\n    if (typeof value !== type) {\r\n      throw ('Type Cheking Error : (' + (typeof value) + ' ' + value + ')' + ' is not typeof ' + type)\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nglobal.optional = function(value, optValue) {\r\n  if (value === undefined) {\r\n    value = optValue\r\n  };\r\n  return value;\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @method intersects()\r\n * @param {Object} r1\r\n * @param {Object} r2\r\n * @returns {Boolean} !collides\r\n */\r\nglobal.intersects = function(r1, r2) {\r\n  let r1x = r1.x;\r\n  let r1xw = r1.x + r1.width;\r\n  let r1y = r1.y;\r\n  let r1yh = r1.y + r1.height;\r\n\r\n  let r2x = r2.x;\r\n  let r2xw = r2.x + r2.width;\r\n  let r2y = r2.y;\r\n  let r2yh = r2.y + r2.height;\r\n\r\n  if (!r1.width || !r1.height) {\r\n    r1xw = r1.x;\r\n    r1yh = r1.y;\r\n    // console.log('rect1 is a point');\r\n  }\r\n  if (!r2.width || !r2.height) {\r\n    r2xw = r2.x;\r\n    r2yh = r2.y;\r\n    // console.log('rect2 is a point');\r\n  }\r\n  if ((!r1.width || !r1.height) && (!r2.width || !r2.height)) {\r\n    // console.log('Cant Resolve Both Objects As Point');\r\n  }\r\n  return !(\r\n    r2x >= r1xw ||\r\n    r1x >= r2xw ||\r\n    r2y >= r1yh ||\r\n    r1y >= r2yh\r\n  )\r\n}\r\n\r\n\r\n\r\n/**\r\n * GLOBAL VARIABLES\r\n */\r\n\r\n// Mouse Listeners //\r\nglobal.mouseX = 0;\r\nglobal.mouseY = 0;\r\nglobal.mouseDown = false;\r\nwindow.addEventListener('mousemove', function (e) {\r\n  global.mouseX = e.offsetX;\r\n  global.mouseY = e.offsetY;\r\n});\r\nwindow.addEventListener('mousedown', function () {\r\n  global.mouseDown = true;\r\n});\r\nwindow.addEventListener('mouseup', function () {\r\n  global.mouseDown = false;\r\n});\r\n\r\n// Keyboard Listeners //\r\nglobal.CURRENT_KEYS = {};\r\nglobal.KEY_W = 87;\r\nglobal.KEY_A = 65;\r\nglobal.KEY_S = 83;\r\nglobal.KEY_D = 68;\r\nglobal.KEY_SPACE = 32;\r\n\r\nglobal.ARROW_UP = 38;\r\nglobal.ARROW_DOWN = 40;\r\nglobal.ARROW_LEFT = 37;\r\nglobal.ARROW_RIGHT = 39;\r\nwindow.addEventListener('keydown', function (e) {\r\n  global.code = e.keyCode || e.which;\r\n  global.CURRENT_KEYS[code] = true;\r\n  if (window.onKeyPressed) {\r\n    global.onKeyPressed(code, e);\r\n  }\r\n})\r\nwindow.addEventListener('keyup', function (e) {\r\n  global.code = e.keyCode || e.which;\r\n  global.CURRENT_KEYS[code] = false;\r\n})\r\n\r\n\r\n\r\nglobal.CANVAS_WIDTH = 0;\r\nglobal.CANVAS_HEIGHT = 0;\r\nglobal.WINDOW_WIDTH = 0;\r\nglobal.WINDOW_HEIGHT = 0;\r\nfunction getWindowSize() {\r\n  global.WINDOW_WIDTH = window.innerWidth - 6;\r\n  global.WINDOW_HEIGHT = window.innerHeight - 6;\r\n}\r\ngetWindowSize();\r\nwindow.addEventListener('resize', getWindowSize);\r\n\r\n\r\n\r\n// BlendModes\r\nglobal.ADD = 'lighter';\r\nglobal.DIFFERENCE = 'difference';\r\nglobal.EXCLUSION = 'exclusion';\r\nglobal.SCREEN = 'screen';\r\nglobal.XOR = 'xor';\r\nglobal.COPY = 'copy';\r\n\r\nglobal.SRC_OVER = 'source-over';\r\nglobal.SRC_OUT = 'source-out';\r\nglobal.SRC_IN = 'source-in';\r\nglobal.SRC_TOP = 'source-atop';\r\n\r\nglobal.DEST_OVER = 'destination-over';\r\nglobal.DEST_OUT = 'destination-out';\r\nglobal.DEST_IN = 'destination-in';\r\nglobal.DEST_TOP = 'destination-atop';\r\n\r\n// TEXT\r\nglobal.CENTER = 'center';\r\nglobal.MIDDLE = 'middle';\r\nglobal.CORNER = 'corner';","\r\n/**\r\n * @method Candy._parseColor()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype._parseColor = function (r, g, b, a) {\r\n  let color = r;\r\n  if (typeof r === 'number') {\r\n    color = rgba(r, g, b);\r\n  }\r\n  if (typeof r === 'number' && (g) && (!b) && (!a)) {\r\n    a = g;\r\n    color = rgba(r, r, r, g)\r\n  }\r\n  if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\r\n    color = rgba(r, g, b, a)\r\n  }\r\n  return color;\r\n}\r\n\r\n/**\r\n * @method Candy.keyIsPressed()\r\n * @param {Number} key\r\n */\r\nCandy.prototype.keyIsPressed = function (key) {\r\n  // console.log(key, CURRENT_KEYS[key])\r\n  if (CURRENT_KEYS[key] === true) {\r\n    return true;\r\n  }\r\n  return false;\r\n}","/**\r\n * @method Candy.loadImage()\r\n * @param {String} url \r\n */\r\nCandy.prototype.loadImage = function (url) {\r\n  this.resCount++;\r\n  let img = new Image();\r\n  img.src = url;\r\n  img.onload = function () { this.resCount--; }.bind(this);\r\n  return img;\r\n}\r\n\r\n/**\r\n * @method Candy.loadJSON()\r\n * @param {String} url \r\n */\r\nCandy.prototype.loadJSON = function (url, callback) {\r\n  this.resCount++;\r\n  let xhr = new XMLHttpRequest();\r\n\r\n  xhr.open('GET', url, true);\r\n  xhr.onload = () => {\r\n    this.resCount--;\r\n    if (xhr.readyState === 4 && xhr.status === 200) {\r\n      callback(null, xhr.responseText);\r\n    } else {\r\n      callback('Error loading JSON', null);\r\n    }\r\n  }\r\n  xhr.send();\r\n\r\n}\r\n\r\n/**\r\n * @method Candy.drawJSON()\r\n * @param {JSON} json \r\n */\r\nCandy.prototype.drawJSON = function (json) {\r\n  for (const i in json) {\r\n    let key = (i).split('-')[0];\r\n    switch (key) {\r\n      case 'fill':\r\n        this[key](json[key])\r\n        break;\r\n      case 'stroke':\r\n        this[key](json[key])\r\n        break;\r\n\r\n      // do defaults \r\n      default:\r\n        if (typeof json[key] === 'object') {\r\n          this[key].apply(this, json[key])\r\n        } else {\r\n          this[key].call(this, json[key])\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}","/**\r\n * @method Candy.noFill()\r\n */\r\nCandy.prototype.noFill = function () {\r\n  this.doFill = false;\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.noStroke()\r\n */\r\nCandy.prototype.noStroke = function () {\r\n  this.doStroke = false;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.fill()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.fill = function (r, g, b, a) {\r\n  let color = this._parseColor(r, g, b, a)\r\n\r\n  // Gradient\r\n  if (typeof r === 'object' && !(r instanceof CanvasGradient)) {\r\n    let grad = c.ctx.createLinearGradient(100, 0, 0, 100);\r\n    for (let i = 0; i < r.length; i++) {\r\n      grad.addColorStop(i / r.length, r[i]);\r\n    }\r\n    this.ctx.fillStyle = grad;\r\n    this.doFill = true;\r\n    return true;\r\n  }\r\n\r\n  this.ctx.fillStyle = color;\r\n  this.doFill = true;\r\n  if (r === undefined) {\r\n    this.ctx.fill();\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.fill()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.stroke = function (r, g, b, a) {\r\n  let color = this._parseColor(r, g, b, a);\r\n\r\n  // Gradient\r\n  if (typeof r === 'object' && !(r instanceof CanvasGradient)) {\r\n    let grad = c.ctx.createLinearGradient(100, 0, 0, 100);\r\n    for (let i = 0; i < r.length; i++) {\r\n      grad.addColorStop(i / r.length, r[i]);\r\n    }\r\n    this.ctx.strokeStyle = grad;\r\n    this.doStroke = true;\r\n    return true\r\n  }\r\n  this.ctx.strokeStyle = color;\r\n  this.doStroke = true;\r\n  if (r === undefined) {\r\n    this.ctx.stroke();\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.linearGradient()\r\n * @param {String} x \r\n * @param {String} y \r\n * @param {String} a \r\n * @param {String} s \r\n * @param {Array} colors \r\n */\r\nCandy.prototype.linearGradient = function (x, y, a, s, colors) {\r\n  let grad = this.ctx.createLinearGradient(x, y, a, s);\r\n  for (let i = 0; i < colors.length; i++) {\r\n    let ratio = i / colors.length\r\n    let percent = colors[i].split('-');\r\n    if (percent[1] !== undefined) {\r\n      ratio = percent[1];\r\n    }\r\n    grad.addColorStop(ratio, percent[0]);\r\n  }\r\n  return grad;\r\n}\r\n\r\n/**\r\n * @method Candy.radialGradient()\r\n * @param {String} x \r\n * @param {String} y \r\n * @param {String} innerRadius \r\n * @param {String} outerRadius \r\n * @param {Array} colors \r\n */\r\nCandy.prototype.radialGradient = function (x, y, innerRadius, outerRadius, colors) {\r\n  let grad = this.ctx.createRadialGradient(x, y, innerRadius, x, y, outerRadius);\r\n  for (let i = 0; i < colors.length; i++) {\r\n    let ratio = i / colors.length\r\n    let percent = colors[i].split('-');\r\n    if (percent[1] !== undefined) {\r\n      ratio = percent[1];\r\n    }\r\n    grad.addColorStop(ratio, percent[0]);\r\n  }\r\n  return grad;\r\n}\r\n\r\nCandy.prototype.shadow = function(x, y, blur, color) {\r\n  this.ctx.shadowColor = color || \"rgba(100,100,100,.4)\";\r\n  this.ctx.shadowOffsetX = x || 0;\r\n  this.ctx.shadowOffsetY = y || 0;\r\n  this.ctx.shadowBlur = blur || 0;\r\n}\r\n\r\nCandy.prototype.noShadow = function() {\r\n  this.ctx.shadowColor = \"rgba(0, 0, 0, 0)\";\r\n  this.ctx.shadowOffsetX = 0;\r\n  this.ctx.shadowOffsetY = 0;\r\n  this.ctx.shadowBlur = 0;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.strokeWeight()\r\n * @param {Number} width \r\n */\r\nCandy.prototype.strokeWeight = function (width) {\r\n  this.ctx.lineWidth = width;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.clear()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.clear = function (r, g, b, a) {\r\n  let c = this._parseColor(r, g, b, a);\r\n  if (c) {\r\n    this.ctx.fillStyle = c;\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    return this;\r\n  } else {\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    return this;\r\n  }\r\n}\r\n\r\nCandy.prototype.rectMode = function (mode) {\r\n  this.rectmode = mode;\r\n}\r\n\r\n/**\r\n * @method Candy.rect()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w \r\n * @param {Number} h \r\n * @param {Number} tl \r\n * @param {Number} tr \r\n * @param {Number} br \r\n * @param {Number} bl \r\n */\r\nCandy.prototype.rect = function (x, y, w, h, tl, tr, br, bl) {\r\n  if (h === undefined) { h = w };\r\n  if (tr === undefined) { tr = tl };\r\n  if (br === undefined) { br = tr };\r\n  if (bl === undefined) { bl = br };\r\n  let hw = w/2;\r\n  let hh = h/2;\r\n  if (tl) {\r\n    this.ctx.beginPath();\r\n    if (this.rectmode === 'center') {\r\n      this.ctx.moveTo(x-hw + tl, y-hh);\r\n      this.ctx.arcTo(x-hw + w, y-hh, x-hw + w, y-hh + h, tr);\r\n      this.ctx.arcTo(x-hw + w, y-hh + h, x-hw, y-hh + h, br);\r\n      this.ctx.arcTo(x-hw, y-hh + h, x-hw, y-hh, bl);\r\n      this.ctx.arcTo(x-hw, y-hh, x-hw + w, y-hh, tl);\r\n    } else {\r\n      this.ctx.moveTo(x + tl, y);\r\n      this.ctx.arcTo(x + w, y, x + w, y + h, tr);\r\n      this.ctx.arcTo(x + w, y + h, x, y + h, br);\r\n      this.ctx.arcTo(x, y + h, x, y, bl);\r\n      this.ctx.arcTo(x, y, x + w, y, tl);\r\n    }\r\n\r\n    this.doFill && this.ctx.fill();\r\n    this.doStroke && this.ctx.stroke();\r\n    this.ctx.closePath();\r\n    return this;\r\n  } else {\r\n    this.ctx.beginPath();\r\n    if (this.rectmode === 'center') {\r\n      this.ctx.rect(x - w / 2, y - h / 2, w, h);\r\n    } else {\r\n      this.ctx.rect(x, y, w, h);\r\n    }\r\n\r\n    this.doFill && this.ctx.fill();\r\n    this.doStroke && this.ctx.stroke();\r\n\r\n    this.ctx.closePath();\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.triangle()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w \r\n * @param {Number} h\r\n */\r\nCandy.prototype.triangle = function (x, y, w, h) {\r\n  this.ctx.beginPath();\r\n  this.ctx.moveTo(x, y);\r\n  this.ctx.lineTo(x + (w / 2), y - h);\r\n  this.ctx.lineTo(x + w, y);\r\n  this.ctx.closePath();\r\n\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n}\r\n\r\n/**\r\n * @method Candy.circle()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} radius\r\n */\r\nCandy.prototype.circle = function (x, y, radius) {\r\n  this.ctx.beginPath();\r\n  this.ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n  this.ctx.closePath();\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.line()\r\n * @param {Number} x1\r\n * @param {Number} y2\r\n * @param {Number} x2\r\n * @param {Number} y2\r\n */\r\nCandy.prototype.line = function (x1, y1, x2, y2) {\r\n  this.ctx.beginPath();\r\n  this.ctx.moveTo(x1, y1);\r\n  this.ctx.lineTo(x2, y2);\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n  this.ctx.closePath();\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.begin()\r\n */\r\nCandy.prototype.begin = function () {\r\n  this.ctx.beginPath();\r\n}\r\n\r\n/**\r\n * @method Candy.close()\r\n */\r\nCandy.prototype.close = function () {\r\n  this.ctx.closePath();\r\n}\r\n\r\n/**\r\n * @method Candy.from()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.from = function (x, y) {\r\n  console.log(typeof x)\r\n  if (typeof x === 'object') {\r\n    this.ctx.moveTo(x.x, x.y)\r\n  }\r\n  this.ctx.moveTo(x, y);\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.to()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.to = function (x, y) {\r\n  if (typeof x === 'object') {\r\n    this.ctx.lineTo(x.x, x.y)\r\n  }\r\n  this.ctx.lineTo(x, y)\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.image()\r\n * @param {Image} img\r\n * @param {Number} sx\r\n * @param {Number} sy\r\n * @param {Number} sw\r\n * @param {Number} sh\r\n * @param {Number} dx\r\n * @param {Number} dy\r\n * @param {Number} dw\r\n * @param {Number} dh\r\n */\r\nCandy.prototype.image = function (img, sx, sy, sw, sh, dx, dy, dw, dh) {\r\n  if (!img.complete) {\r\n    window.setTimeout(() => {\r\n      if (arguments.length === 5) {\r\n        this.image(img, sx, sy, sw, sh);\r\n      } else {\r\n        this.image(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n      }\r\n    }, 50);\r\n    return;\r\n  }\r\n  if (arguments.length === 5) {\r\n    this.ctx.drawImage(img, sx, sy, sw, sh);\r\n  } else {\r\n    this.ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.textAlign()\r\n * @param {String} value\r\n */\r\nCandy.prototype.textAlign = function (value) {\r\n  this.ctx.textAlign = value;\r\n}\r\n\r\n/**\r\n * @method Candy.textBaseline()\r\n * @param {String} value\r\n */\r\nCandy.prototype.textBaseline = function (value) {\r\n  this.ctx.textBaseline = value;\r\n}\r\n\r\n/**\r\n * @method Candy.textFont()\r\n * @param {String} value\r\n */\r\nCandy.prototype.textFont = function (font) {\r\n  this.font[1] = font;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.textSize()\r\n * @param {Number} value\r\n */\r\nCandy.prototype.textSize = function (size) {\r\n  this.font[0] = size + 'px';\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.text()\r\n * @param {String} str\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w\r\n * @param {Number} h\r\n */\r\nCandy.prototype.text = function (str, x, y, w, h) {\r\n  // this.ctx.textAlign = 'end';\r\n  // this.ctx.textBaseline = 'bottom';\r\n  this.ctx.font = this.font.join(' ');\r\n  this.doFill && this.ctx.fillText(str, x, y, w, h)\r\n  this.doStroke && this.ctx.strokeText(str, x, y, w, h)\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.blendMode()\r\n * @param {Number} mode\r\n */\r\nCandy.prototype.blendMode = function (mode) {\r\n  this.ctx.globalCompositeOperation = mode;\r\n}\r\n\r\n/**\r\n * @method Candy.alpha()\r\n * @param {Float} value\r\n */\r\nCandy.prototype.alpha = function (value) {\r\n  this.ctx.globalAlpha = value;\r\n}\r\n\r\n/**\r\n * @method Candy.translate()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.translate = function (x, y) {\r\n  if (y === undefined) { y = x }\r\n  this.ctx.translate(x, y);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.rotate()\r\n * @param {Number} deg\r\n */\r\nCandy.prototype.rotate = function (deg) {\r\n  this.ctx.rotate(deg);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.transRot()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} deg\r\n */\r\nCandy.prototype.transRot = function (x, y, deg) {\r\n  this.ctx.translate(x, y);\r\n  this.ctx.rotate(deg);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.push()\r\n */\r\nCandy.prototype.push = function () {\r\n  this.ctx.save();\r\n}\r\n\r\n/**\r\n * @method Candy.pop()\r\n */\r\nCandy.prototype.pop = function () {\r\n  this.ctx.restore();\r\n}\r\n\r\n/**\r\n * @method Candy.smooth()\r\n * @param {String} qulty\r\n */\r\nCandy.prototype.smooth = function (qulty) {\r\n  if ('imageSmoothingEnabled' in this.ctx) {\r\n    this.ctx.imageSmoothingEnabled = true;\r\n    this.ctx.imageSmoothingQuality = qulty;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.noSmooth()\r\n */\r\nCandy.prototype.noSmooth = function () {\r\n  if ('imageSmoothingEnabled' in this.ctx) {\r\n    this.ctx.imageSmoothingEnabled = false;\r\n  }\r\n}","/**\r\n * Candy.js\r\n * @version v1.6.0\r\n * @description Easy to use canvas renderer similar to p5.Renderer\r\n * @constructor Candy()\r\n * @author Anurag Hazra <hazru.anurag@gmail.com>\r\n * @param {string?} canvas \r\n * @param {Number?} width \r\n * @param {Number?} height \r\n */\r\nfunction Candy(canvas, width, height) {\r\n  // optional constructor\r\n  if (!(this instanceof Candy)) {\r\n    return new Candy(canvas);\r\n  };\r\n\r\n  if (canvas !== undefined) {\r\n    if (typeof canvas === 'string') {\r\n      this.canvas = document.querySelector(canvas);\r\n    } else {\r\n      this.canvas = canvas;\r\n    }\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.width = width;\r\n    this.height = height;\r\n    this.canvas.width = CANVAS_WIDTH = this.width;\r\n    this.canvas.height = CANVAS_HEIGHT = this.height;\r\n  }\r\n\r\n  // Variables\r\n  this.idIndex = 0;\r\n  this.screenBuffers = {};\r\n  this.fireCallback = false;\r\n  this.resCount = 0;\r\n  // Rendering States\r\n  this.doFill = true;\r\n  this.doStroke = true;\r\n  this.rectmode = 'CORNER';\r\n  this.font = ['24px', 'Arial'];\r\n  this.animateLoop = true;\r\n\r\n  this.preload = function(){return null};\r\n\r\n\r\n  this.trypreload();\r\n\r\n  this._initCanvas();\r\n\r\n}\r\n\r\n/**\r\n * FUNCTIONAL PROTOTYPES /////////////////\r\n */\r\n\r\nCandy.prototype.trypreload = function() {\r\n  if (window.preload || this.preload) {\r\n    var timer = window.setInterval(function () {\r\n      if (this.resCount <= 0) {\r\n        var time = (performance.now() / 1000).toFixed(2);\r\n        console.log('%cAll Resources Loaded in ' + time + 's', 'color : green');\r\n        ((window.preload === undefined) ? this.preload : window.preload)();\r\n        window.clearInterval(timer);\r\n        return;\r\n      }\r\n    }.bind(this), 10);\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.resize()\r\n * @param {Boolean} cull\r\n */\r\nCandy.prototype.resize = function (cull) {\r\n  window.addEventListener('resize', function () {\r\n    this.resizeCanvas(this.canvas, cull);\r\n  }.bind(this));\r\n  this.resizeCanvas(this.canvas, cull);\r\n}\r\n\r\n/**\r\n * @method Candy.createCanvas()\r\n * @param {Number} w \r\n * @param {Number} h \r\n */\r\nCandy.prototype.createCanvas = function (w, h) {\r\n  this.canvas = document.createElement('canvas');\r\n  this.canvas.id = 'CandyCanvas-' + this.idIndex;\r\n  this.canvas.width = w || 200;\r\n  this.canvas.height = h || 200;\r\n  CANVAS_WIDTH = this.canvas.width;\r\n  CANVAS_HEIGHT = this.canvas.height;\r\n  this.ctx = this.canvas.getContext('2d');\r\n  document.body.appendChild(this.canvas);\r\n\r\n  this.index++;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.createScreenBuffer()\r\n * @param {String} name \r\n */\r\nCandy.prototype.createScreenBuffer = function (name) {\r\n  let canvas = document.createElement('canvas');\r\n  canvas.id = 'CandyCanvasOffscreen-' + this.idIndex;\r\n  canvas.width = this.canvas.width;\r\n  canvas.height = this.canvas.height;\r\n  // this.resizeCanvas(canvas);\r\n  this.screenBuffers[name] = new Candy(canvas, canvas.width, canvas.height);\r\n}\r\n\r\n/**\r\n * @method Candy.putScreenBuffer()\r\n * @param {imageData} data \r\n */\r\nCandy.prototype.putScreenBuffer = function (data) {\r\n  this.ctx.drawImage(data.canvas, 0, 0);\r\n}\r\n\r\nCandy.prototype._initCanvas = function () {\r\n  window.addEventListener('DOMContentLoaded', function () {\r\n    if (window.animate && this.fireCallback) {\r\n      animate();\r\n    }\r\n  }.bind(this));\r\n}\r\n\r\nCandy.prototype.noLoop = function () {\r\n  this.animateLoop = false;\r\n}\r\n\r\n/**\r\n * @method Candy.loop()\r\n * @param {Function} func \r\n */\r\nCandy.prototype.loop = function (func) {\r\n  if (this.animateLoop) {\r\n    if (window.animate) {\r\n      return requestAnimationFrame(animate);\r\n    } else {\r\n      return requestAnimationFrame(func)\r\n    }\r\n  } else {\r\n    this.animateLoop = true;\r\n  }\r\n  // return requestAnimationFrame(func);\r\n}\r\n\r\n/**\r\n * @method Candy.resizeCanvas()\r\n * @param {Element} canvas \r\n * @param {Boolean} cull \r\n */\r\nCandy.prototype.resizeCanvas = function (canvas, cull) {\r\n  let targetHeight = window.innerWidth * 9 / 16;\r\n\r\n  if (window.innerHeight > targetHeight) {\r\n    if (cull) {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = targetHeight;\r\n    } else {\r\n      canvas.style.width = window.innerWidth + 'px';\r\n      canvas.style.height = targetHeight + 'px';\r\n    }\r\n    canvas.style.left = '0px';\r\n    canvas.style.top = (window.innerHeight - targetHeight) / 2 + 'px';\r\n  } else {\r\n    if (cull) {\r\n      canvas.width = window.innerHeight * 16 / 9;\r\n      canvas.height = window.innerHeight;\r\n    } else {\r\n      canvas.style.width = window.innerHeight * 16 / 9 + 'px';\r\n      canvas.style.height = window.innerHeight + 'px';\r\n    }\r\n    canvas.style.left = (window.innerWidth - (canvas.width)) / 2 + 'px';\r\n    canvas.style.top = '0px';\r\n  }\r\n}\r\n\r\n\r\nglobal.Candy = Candy;\r\nmodule.exports = Candy;\r\n","require('./core');\r\nrequire('./renderer');\r\nrequire('./io');\r\nrequire('./utils');\r\nrequire('./globals');"],"sourceRoot":""}