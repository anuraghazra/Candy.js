{"version":3,"sources":["webpack://Candy/webpack/universalModuleDefinition","webpack://Candy/webpack/bootstrap","webpack://Candy/./src/core.js","webpack://Candy/./src/app.js","webpack://Candy/./src/renderer.js","webpack://Candy/./src/io.js","webpack://Candy/./src/utils.js","webpack://Candy/./src/globals.js","webpack://Candy/(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Candy","canvas","width","height","undefined","document","querySelector","ctx","getContext","CANVAS_WIDTH","CANVAS_HEIGHT","idIndex","screenBuffers","fireCallback","resCount","doFill","doStroke","rectmode","font","animateLoop","pixels","imageData","preload","trypreload","_initCanvas","window","timer","setInterval","time","performance","now","toFixed","console","log","clearInterval","resize","cull","addEventListener","resizeCanvas","fullScreen","offset","w","WINDOW_WIDTH","h","WINDOW_HEIGHT","createCanvas","createElement","id","body","appendChild","index","createScreenBuffer","putScreenBuffer","data","drawImage","animate","noLoop","loop","func","requestAnimationFrame","targetHeight","innerWidth","innerHeight","style","left","top","noFill","noStroke","fill","g","b","a","color","_parseColor","CanvasGradient","grad","createLinearGradient","length","addColorStop","fillStyle","stroke","strokeStyle","linearGradient","x","y","colors","ratio","percent","split","radialGradient","innerRadius","outerRadius","createRadialGradient","shadow","blur","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","noShadow","strokeWeight","lineWidth","clear","fillRect","clearRect","rectMode","rect","tl","tr","br","bl","hw","hh","beginPath","moveTo","arcTo","closePath","triangle","lineTo","circle","radius","arc","Math","PI","line","x1","y1","x2","y2","begin","close","from","to","image","img","sx","sy","sw","sh","dx","dy","dw","dh","complete","arguments","setTimeout","textAlign","textBaseline","textFont","textSize","size","text","str","join","fillText","strokeText","blendMode","globalCompositeOperation","alpha","globalAlpha","translate","rotate","deg","scale","transRot","push","save","pop","restore","smooth","qulty","imageSmoothingEnabled","imageSmoothingQuality","noSmooth","loadPixels","imagedata","getImageData","updatePixels","putImageData","setPixelXYColor","rgba","pxl","setPixelArrayColor","Error","loadImage","url","Image","src","onload","loadJSON","callback","xhr","XMLHttpRequest","open","readyState","status","responseText","send","drawJSON","json","apply","keyIsPressed","CURRENT_KEYS","global","getWindowSize","clamp","rgb","hsla","hsl","randomRGB","_r","_g","_b","randomInt","randomHSLA","_h","_s","_l","_a","radians","norm","min","max","lerp","map","sMin","sMax","dMin","dMax","dist","px","py","qx","qy","sqrt","distSq","random","floor","tween","pos","target","speed","checkType","type","constructor","toString","toLowerCase","indexOf","optional","optValue","intersects","r1","r2","r1x","r1xw","r1y","r1yh","r2x","r2xw","r2y","r2yh","mouseX","mouseY","mouseDown","e","offsetX","offsetY","KEY_W","KEY_A","KEY_S","KEY_D","KEY_SPACE","ARROW_UP","ARROW_DOWN","ARROW_LEFT","ARROW_RIGHT","code","keyCode","which","onKeyPressed","ADD","DIFFERENCE","EXCLUSION","SCREEN","XOR","COPY","SRC_OVER","SRC_OUT","SRC_IN","SRC_TOP","DEST_OVER","DEST_OUT","DEST_IN","DEST_TOP","CENTER","MIDDLE","CORNER","Function"],"mappings":"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","file":"Candy.build.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Candy\"] = factory();\n\telse\n\t\troot[\"Candy\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","/**\r\n * Candy.js\r\n * @version v1.6.1\r\n * @description Easy to use canvas renderer similar\r\n * @constructor Candy()\r\n * @author Anurag Hazra <hazru.anurag@gmail.com>\r\n * @param {string?} canvas \r\n * @param {Number?} width \r\n * @param {Number?} height \r\n */\r\nfunction Candy(canvas, width, height) {\r\n  // optional constructor\r\n  if (!(this instanceof Candy)) {\r\n    return new Candy(canvas);\r\n  };\r\n\r\n  if (canvas !== undefined) {\r\n    if (typeof canvas === 'string') {\r\n      this.canvas = document.querySelector(canvas);\r\n    } else {\r\n      this.canvas = canvas;\r\n    }\r\n    this.ctx = this.canvas.getContext('2d');\r\n    this.width = width;\r\n    this.height = height;\r\n    this.canvas.width = CANVAS_WIDTH = this.width;\r\n    this.canvas.height = CANVAS_HEIGHT = this.height;\r\n  }\r\n\r\n  // Variables\r\n  this.idIndex = 0;\r\n  this.screenBuffers = {};\r\n  this.fireCallback = false;\r\n  this.resCount = 0;\r\n  // Rendering States\r\n  this.doFill = true;\r\n  this.doStroke = true;\r\n  this.rectmode = 'CORNER';\r\n  this.font = ['24px', 'Arial'];\r\n  this.animateLoop = true;\r\n\r\n  // pixels\r\n  this.pixels = [];\r\n  this.imageData = null;\r\n\r\n  this.preload = function(){return null};\r\n\r\n\r\n  this.trypreload();\r\n\r\n  this._initCanvas();\r\n\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.trypreload();\r\n * preloads all the resources\r\n */\r\nCandy.prototype.trypreload = function() {\r\n  if (window.preload || this.preload) {\r\n    var timer = window.setInterval(function () {\r\n      if (this.resCount <= 0) {\r\n        var time = (performance.now() / 1000).toFixed(2);\r\n        console.log('%cAll Resources Loaded in ' + time + 's', 'color : green');\r\n        ((window.preload === undefined) ? this.preload : window.preload)();\r\n        window.clearInterval(timer);\r\n        return;\r\n      }\r\n    }.bind(this), 10);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.resize()\r\n * @param {Boolean} cull\r\n */\r\nCandy.prototype.resize = function (cull) {\r\n  window.addEventListener('resize', function () {\r\n    this.resizeCanvas(this.canvas, cull);\r\n  }.bind(this));\r\n  this.resizeCanvas(this.canvas, cull);\r\n}\r\n\r\n/**\r\n * @method Candy.fullScreen()\r\n */\r\nCandy.prototype.fullScreen = function (offset) {\r\n  offset = (offset === undefined) ? 4 : offset;\r\n  let w = WINDOW_WIDTH-offset;\r\n  let h = WINDOW_HEIGHT-offset;\r\n  this.canvas.width = w;\r\n  this.canvas.height = h;\r\n  this.width = w;\r\n  this.height = h;\r\n  CANVAS_WIDTH = w;\r\n  CANVAS_HEIGHT = h;\r\n}\r\n\r\n/**\r\n * @method Candy.createCanvas()\r\n * @param {Number} w \r\n * @param {Number} h \r\n * creates a new Canvas Element with defined Width and Height\r\n */\r\nCandy.prototype.createCanvas = function (w, h) {\r\n  this.canvas = document.createElement('canvas');\r\n  this.canvas.id = 'CandyCanvas-' + this.idIndex;\r\n  this.canvas.width = w || 200;\r\n  this.canvas.height = h || 200;\r\n  CANVAS_WIDTH = this.canvas.width;\r\n  CANVAS_HEIGHT = this.canvas.height;\r\n  this.ctx = this.canvas.getContext('2d');\r\n  document.body.appendChild(this.canvas);\r\n\r\n  this.index++;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.createScreenBuffer()\r\n * @param {String} name \r\n * @param {Number} width \r\n * @param {Number} height \r\n * creates a new screenBuffer Element with defined Width and Height\r\n */\r\nCandy.prototype.createScreenBuffer = function (name, width, height) {\r\n  let canvas = document.createElement('canvas');\r\n  canvas.id = 'CandyCanvasOffscreen-' + this.idIndex;\r\n  canvas.width = width || this.canvas.width;\r\n  canvas.height = height || this.canvas.height;\r\n  // this.resizeCanvas(canvas);\r\n  this.screenBuffers[name] = new Candy(canvas, canvas.width, canvas.height);\r\n  return this.screenBuffers[name];\r\n}\r\n\r\n/**\r\n * @method Candy.putScreenBuffer()\r\n * @param {imageData} data \r\n * puts the screenBuffer data into main canvas\r\n */\r\nCandy.prototype.putScreenBuffer = function (data) {\r\n  this.ctx.drawImage(data.canvas, 0, 0);\r\n}\r\n\r\n/**\r\n * @method Candy._initCanvas();\r\n * fires window.animate callback when startup\r\n */\r\nCandy.prototype._initCanvas = function () {\r\n  window.addEventListener('DOMContentLoaded', function () {\r\n    if (window.animate && this.fireCallback) {\r\n      animate();\r\n    }\r\n  }.bind(this));\r\n}\r\n\r\n/**\r\n * @method Candy.noLoop();\r\n * stops animation loop\r\n */\r\nCandy.prototype.noLoop = function () {\r\n  this.animateLoop = false;\r\n}\r\n\r\n/**\r\n * @method Candy.loop()\r\n * @param {Function} func \r\n * starts animation loop\r\n */\r\nCandy.prototype.loop = function (func) {\r\n  if (this.animateLoop) {\r\n    if (window.animate) {\r\n      return requestAnimationFrame(animate);\r\n    } else {\r\n      return requestAnimationFrame(func)\r\n    }\r\n  } else {\r\n    this.animateLoop = true;\r\n  }\r\n  // return requestAnimationFrame(func);\r\n}\r\n\r\n/**\r\n * @method Candy.resizeCanvas()\r\n * @param {Element} canvas \r\n * @param {Boolean} cull \r\n * resizes the canvas with 16:9 aspect ratio\r\n */\r\nCandy.prototype.resizeCanvas = function (canvas, cull) {\r\n  let targetHeight = window.innerWidth * 9 / 16;\r\n\r\n  if (window.innerHeight > targetHeight) {\r\n    if (cull) {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = targetHeight;\r\n    } else {\r\n      canvas.style.width = window.innerWidth + 'px';\r\n      canvas.style.height = targetHeight + 'px';\r\n    }\r\n    canvas.style.left = '0px';\r\n    canvas.style.top = (window.innerHeight - targetHeight) / 2 + 'px';\r\n  } else {\r\n    if (cull) {\r\n      canvas.width = window.innerHeight * 16 / 9;\r\n      canvas.height = window.innerHeight;\r\n    } else {\r\n      canvas.style.width = window.innerHeight * 16 / 9 + 'px';\r\n      canvas.style.height = window.innerHeight + 'px';\r\n    }\r\n    canvas.style.left = (window.innerWidth - (canvas.width)) / 2 + 'px';\r\n    canvas.style.top = '0px';\r\n  }\r\n}\r\n\r\nmodule.exports = Candy;\r\n","const Candy = require('./core');\r\nrequire('./renderer');\r\nrequire('./io');\r\nrequire('./utils');\r\nrequire('./globals');\r\n\r\nmodule.exports = Candy;","const Candy = require('./core');\r\n\r\n/**\r\n * @method Candy.noFill()\r\n */\r\nCandy.prototype.noFill = function () {\r\n  this.doFill = false;\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.noStroke()\r\n */\r\nCandy.prototype.noStroke = function () {\r\n  this.doStroke = false;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.fill()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.fill = function (r, g, b, a) {\r\n  let color = this._parseColor(r, g, b, a)\r\n\r\n  // Gradient\r\n  if (typeof r === 'object' && !(r instanceof CanvasGradient)) {\r\n    let grad = c.ctx.createLinearGradient(100, 0, 0, 100);\r\n    for (let i = 0; i < r.length; i++) {\r\n      grad.addColorStop(i / r.length, r[i]);\r\n    }\r\n    this.ctx.fillStyle = grad;\r\n    this.doFill = true;\r\n    return true;\r\n  }\r\n\r\n  this.ctx.fillStyle = color;\r\n  this.doFill = true;\r\n  if (r === undefined) {\r\n    this.ctx.fill();\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.fill()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.stroke = function (r, g, b, a) {\r\n  let color = this._parseColor(r, g, b, a);\r\n\r\n  // Gradient\r\n  if (typeof r === 'object' && !(r instanceof CanvasGradient)) {\r\n    let grad = c.ctx.createLinearGradient(100, 0, 0, 100);\r\n    for (let i = 0; i < r.length; i++) {\r\n      grad.addColorStop(i / r.length, r[i]);\r\n    }\r\n    this.ctx.strokeStyle = grad;\r\n    this.doStroke = true;\r\n    return true\r\n  }\r\n  this.ctx.strokeStyle = color;\r\n  this.doStroke = true;\r\n  if (r === undefined) {\r\n    this.ctx.stroke();\r\n    return this;\r\n  }\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.linearGradient()\r\n * @param {String} x \r\n * @param {String} y \r\n * @param {String} a \r\n * @param {String} s \r\n * @param {Array} colors \r\n */\r\nCandy.prototype.linearGradient = function (x, y, a, s, colors) {\r\n  let grad = this.ctx.createLinearGradient(x, y, a, s);\r\n  for (let i = 0; i < colors.length; i++) {\r\n    let ratio = i / colors.length\r\n    let percent = colors[i].split('-');\r\n    if (percent[1] !== undefined) {\r\n      ratio = percent[1];\r\n    }\r\n    grad.addColorStop(ratio, percent[0]);\r\n  }\r\n  return grad;\r\n}\r\n\r\n/**\r\n * @method Candy.radialGradient()\r\n * @param {String} x \r\n * @param {String} y \r\n * @param {String} innerRadius \r\n * @param {String} outerRadius \r\n * @param {Array} colors \r\n */\r\nCandy.prototype.radialGradient = function (x, y, innerRadius, outerRadius, colors) {\r\n  let grad = this.ctx.createRadialGradient(x, y, innerRadius, x, y, outerRadius);\r\n  for (let i = 0; i < colors.length; i++) {\r\n    let ratio = i / colors.length\r\n    let percent = colors[i].split('-');\r\n    if (percent[1] !== undefined) {\r\n      ratio = percent[1];\r\n    }\r\n    grad.addColorStop(ratio, percent[0]);\r\n  }\r\n  return grad;\r\n}\r\n\r\n/**\r\n * @method Candy.shadow();\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} blur\r\n * @param {String} color\r\n */\r\nCandy.prototype.shadow = function (x, y, blur, color) {\r\n  this.ctx.shadowColor = color || \"rgba(100,100,100,.4)\";\r\n  this.ctx.shadowOffsetX = x || 0;\r\n  this.ctx.shadowOffsetY = y || 0;\r\n  this.ctx.shadowBlur = blur || 0;\r\n}\r\n\r\n/**\r\n * @method Candy.noShadow();\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} blur\r\n * @param {String} color\r\n */\r\nCandy.prototype.noShadow = function () {\r\n  this.ctx.shadowColor = \"rgba(0, 0, 0, 0)\";\r\n  this.ctx.shadowOffsetX = 0;\r\n  this.ctx.shadowOffsetY = 0;\r\n  this.ctx.shadowBlur = 0;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.strokeWeight()\r\n * @param {Number} width \r\n */\r\nCandy.prototype.strokeWeight = function (width) {\r\n  this.ctx.lineWidth = width;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.clear()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype.clear = function (r, g, b, a) {\r\n  let c = this._parseColor(r, g, b, a);\r\n  if (c) {\r\n    this.ctx.fillStyle = c;\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n    return this;\r\n  } else {\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.rectMode();\r\n * @param {String} mode\r\n */\r\nCandy.prototype.rectMode = function (mode) {\r\n  this.rectmode = mode;\r\n}\r\n\r\n/**\r\n * @method Candy.rect()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w \r\n * @param {Number} h \r\n * @param {Number} tl \r\n * @param {Number} tr \r\n * @param {Number} br \r\n * @param {Number} bl \r\n */\r\nCandy.prototype.rect = function (x, y, w, h, tl, tr, br, bl) {\r\n  if (h === undefined) { h = w };\r\n  if (tr === undefined) { tr = tl };\r\n  if (br === undefined) { br = tr };\r\n  if (bl === undefined) { bl = br };\r\n  let hw = w / 2;\r\n  let hh = h / 2;\r\n  if (tl) {\r\n    this.ctx.beginPath();\r\n    if (this.rectmode === 'center') {\r\n      this.ctx.moveTo(x - hw + tl, y - hh);\r\n      this.ctx.arcTo(x - hw + w, y - hh, x - hw + w, y - hh + h, tr);\r\n      this.ctx.arcTo(x - hw + w, y - hh + h, x - hw, y - hh + h, br);\r\n      this.ctx.arcTo(x - hw, y - hh + h, x - hw, y - hh, bl);\r\n      this.ctx.arcTo(x - hw, y - hh, x - hw + w, y - hh, tl);\r\n    } else {\r\n      this.ctx.moveTo(x + tl, y);\r\n      this.ctx.arcTo(x + w, y, x + w, y + h, tr);\r\n      this.ctx.arcTo(x + w, y + h, x, y + h, br);\r\n      this.ctx.arcTo(x, y + h, x, y, bl);\r\n      this.ctx.arcTo(x, y, x + w, y, tl);\r\n    }\r\n\r\n    this.doFill && this.ctx.fill();\r\n    this.doStroke && this.ctx.stroke();\r\n    this.ctx.closePath();\r\n    return this;\r\n  } else {\r\n    this.ctx.beginPath();\r\n    if (this.rectmode === 'center') {\r\n      this.ctx.rect(x - w / 2, y - h / 2, w, h);\r\n    } else {\r\n      this.ctx.rect(x, y, w, h);\r\n    }\r\n\r\n    this.doFill && this.ctx.fill();\r\n    this.doStroke && this.ctx.stroke();\r\n\r\n    this.ctx.closePath();\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.triangle()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w \r\n * @param {Number} h\r\n */\r\nCandy.prototype.triangle = function (x, y, w, h) {\r\n  this.ctx.beginPath();\r\n  this.ctx.moveTo(x, y);\r\n  this.ctx.lineTo(x + (w / 2), y - h);\r\n  this.ctx.lineTo(x + w, y);\r\n  this.ctx.closePath();\r\n\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n}\r\n\r\n/**\r\n * @method Candy.circle()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} radius\r\n */\r\nCandy.prototype.circle = function (x, y, radius) {\r\n  this.ctx.beginPath();\r\n  this.ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n  this.ctx.closePath();\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.line()\r\n * @param {Number} x1\r\n * @param {Number} y2\r\n * @param {Number} x2\r\n * @param {Number} y2\r\n */\r\nCandy.prototype.line = function (x1, y1, x2, y2) {\r\n  this.ctx.beginPath();\r\n  this.ctx.moveTo(x1, y1);\r\n  this.ctx.lineTo(x2, y2);\r\n  this.doFill && this.ctx.fill();\r\n  this.doStroke && this.ctx.stroke();\r\n  this.ctx.closePath();\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.begin()\r\n */\r\nCandy.prototype.begin = function () {\r\n  this.ctx.beginPath();\r\n}\r\n\r\n/**\r\n * @method Candy.close()\r\n */\r\nCandy.prototype.close = function () {\r\n  this.ctx.closePath();\r\n}\r\n\r\n/**\r\n * @method Candy.from()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.from = function (x, y) {\r\n  if (typeof x === 'object') {\r\n    this.ctx.moveTo(x.x, x.y)\r\n  }\r\n  this.ctx.moveTo(x, y);\r\n  return this;\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.to()\r\n * @param {Number} x\r\n * @param {Number} y\r\n */\r\nCandy.prototype.to = function (x, y) {\r\n  if (typeof x === 'object') {\r\n    this.ctx.lineTo(x.x, x.y)\r\n  }\r\n  this.ctx.lineTo(x, y)\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.image()\r\n * @param {Image} img\r\n * @param {Number} sx\r\n * @param {Number} sy\r\n * @param {Number} sw\r\n * @param {Number} sh\r\n * @param {Number} dx\r\n * @param {Number} dy\r\n * @param {Number} dw\r\n * @param {Number} dh\r\n */\r\nCandy.prototype.image = function (img, sx, sy, sw, sh, dx, dy, dw, dh) {\r\n  if (!img.complete) {\r\n    window.setTimeout(() => {\r\n      if (arguments.length === 5) {\r\n        this.image(img, sx, sy, sw, sh);\r\n      } else {\r\n        this.image(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n      }\r\n    }, 50);\r\n    return;\r\n  }\r\n  if (arguments.length === 5) {\r\n    this.ctx.drawImage(img, sx, sy, sw, sh);\r\n  } else {\r\n    this.ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh);\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.textAlign()\r\n * @param {String} value\r\n * @chainable\r\n */\r\nCandy.prototype.textAlign = function (value) {\r\n  this.ctx.textAlign = value;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.textBaseline()\r\n * @param {String} value\r\n * @chainable\r\n */\r\nCandy.prototype.textBaseline = function (value) {\r\n  this.ctx.textBaseline = value;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.textFont()\r\n * @param {String} value\r\n * @chainable\r\n */\r\nCandy.prototype.textFont = function (font) {\r\n  this.font[1] = font;\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.textSize()\r\n * @param {Number} value\r\n * @chainable\r\n */\r\nCandy.prototype.textSize = function (size) {\r\n  this.font[0] = size + 'px';\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.text()\r\n * @param {String} str\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} w\r\n * @param {Number} h\r\n * @chainable\r\n */\r\nCandy.prototype.text = function (str, x, y, w, h) {\r\n  // this.ctx.textAlign = 'end';\r\n  // this.ctx.textBaseline = 'bottom';\r\n  this.ctx.font = this.font.join(' ');\r\n  this.doFill && this.ctx.fillText(str, x, y, w, h)\r\n  this.doStroke && this.ctx.strokeText(str, x, y, w, h)\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.blendMode()\r\n * @param {Number} mode\r\n */\r\nCandy.prototype.blendMode = function (mode) {\r\n  this.ctx.globalCompositeOperation = mode;\r\n}\r\n\r\n/**\r\n * @method Candy.alpha()\r\n * @param {Float} value\r\n */\r\nCandy.prototype.alpha = function (value) {\r\n  this.ctx.globalAlpha = value;\r\n}\r\n\r\n/**\r\n * @method Candy.translate()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @chainable\r\n */\r\nCandy.prototype.translate = function (x, y) {\r\n  if (y === undefined) { y = x }\r\n  this.ctx.translate(x, y);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.rotate()\r\n * @param {Number} deg\r\n * @chainable\r\n */\r\nCandy.prototype.rotate = function (deg) {\r\n  this.ctx.rotate(deg);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.scale()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @chainable\r\n */\r\nCandy.prototype.scale = function (x, y) {\r\n  if (x === undefined) x = 1.0;\r\n  if (y === undefined) y = x;\r\n  this.ctx.scale(x, y);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.transRot()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Number} deg\r\n * @chainable\r\n */\r\nCandy.prototype.transRot = function (x, y, deg) {\r\n  this.ctx.translate(x, y);\r\n  this.ctx.rotate(deg);\r\n  return this;\r\n}\r\n\r\n/**\r\n * @method Candy.push()\r\n */\r\nCandy.prototype.push = function () {\r\n  this.ctx.save();\r\n}\r\n\r\n/**\r\n * @method Candy.pop()\r\n */\r\nCandy.prototype.pop = function () {\r\n  this.ctx.restore();\r\n}\r\n\r\n/**\r\n * @method Candy.smooth()\r\n * @param {String} qulty\r\n */\r\nCandy.prototype.smooth = function (qulty) {\r\n  if ('imageSmoothingEnabled' in this.ctx) {\r\n    this.ctx.imageSmoothingEnabled = true;\r\n    this.ctx.imageSmoothingQuality = qulty;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.noSmooth()\r\n */\r\nCandy.prototype.noSmooth = function () {\r\n  if ('imageSmoothingEnabled' in this.ctx) {\r\n    this.ctx.imageSmoothingEnabled = false;\r\n  }\r\n}\r\n\r\n/**\r\n * @method Candy.loadPixels()\r\n * @param {Number?} x\r\n * @param {Number?} y\r\n * @param {Number?} width\r\n * @param {Number?} height\r\n * @return {Object}\r\n * \r\n */\r\nCandy.prototype.loadPixels = function (width, height) {\r\n  if (width === undefined) width = this.canvas.width;\r\n  if (height === undefined) height = this.canvas.height;\r\n  let imagedata = this.ctx.getImageData(0, 0, width, height);\r\n\r\n  this.imageData = imagedata;\r\n  this.pixels = imagedata.data;\r\n\r\n  return { imageData: imagedata, pixels: imagedata.data };\r\n}\r\n\r\n\r\n/**\r\n * @method Candy.updatePixels()\r\n * @param {CanvasRenderingContext2D?} ctx \r\n * @param {ImageData?} imagedata \r\n * @param {Number?} x \r\n * @param {Number?} y \r\n * @param {Number?} dx \r\n * @param {Number?} dy \r\n * @param {Number?} dw \r\n * @param {Number?} dh \r\n */\r\nCandy.prototype.updatePixels = function (x, y, w, h) {\r\n  if (x === undefined && y === undefined && w === undefined && h === undefined) {\r\n    x = 0;\r\n    y = 0;\r\n    w = this.canvas.width;\r\n    h = this.canvas.height;\r\n  }\r\n  this.ctx.putImageData(this.imageData, x, y, 0, 0, w, h);\r\n}\r\n\r\n/**\r\n * @method Candy.setPixelColor()\r\n * @param {Number} x\r\n * @param {Number} y\r\n * @param {Array} rgba\r\n * calculates the xy indices \r\n */\r\nCandy.prototype.setPixelXYColor = function (x, y, rgba, pxl) {\r\n  let index = (x + y * this.canvas.width) * 4;\r\n  this.setPixelArrayColor(index, rgba, pxl);\r\n}\r\n/**\r\n * @method Candy.setPixelArrayColor()\r\n * @param {Number} index\r\n * @param {Array} rgba\r\n * just takes the calculated xy position \r\n */\r\nCandy.prototype.setPixelArrayColor = function (index, rgba, pixels) {\r\n  let pxl;\r\n  if (pixels !== undefined) {\r\n    pxl = pixels;\r\n  } else {\r\n    pxl = this.pixels;\r\n  }\r\n  if (pxl.length < 1) throw new Error('loadPixels() is not called')\r\n  pxl[index + 0] = rgba[0];\r\n  pxl[index + 1] = rgba[1];\r\n  pxl[index + 2] = rgba[2];\r\n  pxl[index + 3] = rgba[3] || 255;\r\n  return pxl;\r\n}\r\n\r\nmodule.exports = Candy;","const Candy = require('./core');\r\n\r\n/**\r\n * @method Candy.loadImage()\r\n * @param {String} url \r\n * @return HTMLImageElement\r\n */\r\nCandy.prototype.loadImage = function (url) {\r\n  this.resCount++;\r\n  let img = new Image();\r\n  img.src = url;\r\n  img.onload = function () { this.resCount--; }.bind(this);\r\n  return img;\r\n}\r\n\r\n/**\r\n * @method Candy.loadJSON()\r\n * @param {String} url\r\n * @param {Function} callback\r\n * loads a JSON file\r\n */\r\nCandy.prototype.loadJSON = function (url, callback) {\r\n  this.resCount++;\r\n  let xhr = new XMLHttpRequest();\r\n\r\n  xhr.open('GET', url, true);\r\n  xhr.onload = () => {\r\n    this.resCount--;\r\n    if (xhr.readyState === 4 && xhr.status === 200) {\r\n      callback(null, xhr.responseText);\r\n    } else {\r\n      callback('Error loading JSON', null);\r\n    }\r\n  }\r\n  xhr.send();\r\n\r\n}\r\n\r\n/**\r\n * @method Candy.drawJSON()\r\n * @param {JSON} json \r\n * draws a JSON file\r\n */\r\nCandy.prototype.drawJSON = function (json) {\r\n  for (const i in json) {\r\n    let key = (i).split('-')[0];\r\n    switch (key) {\r\n      case 'fill':\r\n        this[key](json[key])\r\n        break;\r\n      case 'stroke':\r\n        this[key](json[key])\r\n        break;\r\n\r\n      // do defaults \r\n      default:\r\n        if (typeof json[key] === 'object') {\r\n          this[key].apply(this, json[key])\r\n        } else {\r\n          this[key].call(this, json[key])\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Candy;\r\n","const Candy = require('./core');\r\n\r\n/**\r\n * @method Candy._parseColor()\r\n * @param {String|Number} r \r\n * @param {String|Number} g \r\n * @param {String|Number} b \r\n * @param {String|Number} a \r\n */\r\nCandy.prototype._parseColor = function (r, g, b, a) {\r\n  let color = r;\r\n  if (typeof r === 'number') {\r\n    color = rgba(r, g, b);\r\n  }\r\n  if (typeof r === 'number' && (g) && (!b) && (!a)) {\r\n    a = g;\r\n    color = rgba(r, r, r, g)\r\n  }\r\n  if (typeof r === 'number' && typeof g === 'number' && typeof b === 'number') {\r\n    color = rgba(r, g, b, a)\r\n  }\r\n  return color;\r\n}\r\n\r\n/**\r\n * @method Candy.keyIsPressed()\r\n * @param {Number} key\r\n */\r\nCandy.prototype.keyIsPressed = function (key) {\r\n  // console.log(key, CURRENT_KEYS[key])\r\n  if (CURRENT_KEYS[key] === true) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nmodule.exports = Candy;\r\n","/**\r\n * @method rgba()\r\n * @global\r\n * @param {String|Number} r \r\n * @param {String|Number?} g \r\n * @param {String|Number?} b \r\n * @param {String|Number?} a\r\n */\r\nglobal.rgba = function(r, g, b, a) {\r\n  if (g === undefined) g = r;\r\n  if (b === undefined) b = r;\r\n  if (a === undefined) a = 1;\r\n  if (a > 1) { a = a / 255 };\r\n  return 'rgba(' + clamp(r, 0, 255) + ',' + clamp(g, 0, 255) + ',' + clamp(b, 0, 255) + ',' + clamp(a, 0, 1) + ')'\r\n}\r\n\r\n/**\r\n * @method rgb()\r\n * @global\r\n * @param {String|Number} r \r\n * @param {String|Number?} g \r\n * @param {String|Number?} b\r\n */\r\nglobal.rgb = function(r, g, b) {\r\n  if (g === undefined) g = r;\r\n  if (b === undefined) b = r;\r\n  return 'rgb(' + clamp(r, 0, 255) + ',' + clamp(g, 0, 255) + ',' + clamp(b, 0, 255) + ')'\r\n}\r\n\r\n/**\r\n * @method hsla()\r\n * @global\r\n * @param {Number} h \r\n * @param {Number} s \r\n * @param {Number} l\r\n * @param {Number} a\r\n */\r\nglobal.hsla = function(h, s, l, a) {\r\n  return 'hsla(' + h + 'deg, ' + clamp(s, 0, 100) + '%, ' + clamp(l, 0, 100) + '%, ' + ((a === undefined) ? 1 : a) + ')';\r\n};\r\n\r\n/**\r\n * @method hsl()\r\n * @global\r\n * @param {Number} h \r\n * @param {Number} s \r\n * @param {Number} l\r\n */\r\nglobal.hsl = function(h, s, l) {\r\n  return 'hsl(' + h + 'deg, ' + clamp(s, 0, 100) + '%, ' + clamp(l, 0, 100) + '%)';\r\n};\r\n\r\n/**\r\n * @method randomRGB()\r\n * @global\r\n * @param {Number?} _r\r\n * @param {Number?} _g \r\n * @param {Number?} _g\r\n */\r\nglobal.randomRGB = function(_r, _g, _b) {\r\n  let r = randomInt(_r || 255);\r\n  let g = randomInt(_g || 255);\r\n  let b = randomInt(_b || 255);\r\n  return rgb(r, g, b)\r\n}\r\n\r\n/**\r\n * @method randomHSLA()\r\n * @global\r\n * @param {Number?} _h\r\n * @param {Number?} _s\r\n * @param {Number?} _l\r\n * @param {Number?} _a \r\n */\r\nglobal.randomHSLA = function(_h, _s, _l, _a) {\r\n  let h = randomInt(_h || 360);\r\n  let s = randomInt(_s || 100);\r\n  let l = randomInt(_l || 100);\r\n  let a = (_a === undefined) ? 1 : _a;\r\n  return hsla(h, s, l, a);\r\n}\r\n\r\n/**\r\n * @method radians()\r\n * @global\r\n * @param {Number?} a\r\n */\r\nglobal.radians = function radians(a) {\r\n  return a * Math.PI/180;\r\n}\r\n\r\n/**\r\n * @method norm()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.norm = function(value, min, max) {\r\n  return (value - min) / (max - min);\r\n}\r\n\r\n/**\r\n * @method lerp()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.lerp = function(norm, min, max) {\r\n  return (max - min) * norm + min;\r\n}\r\n\r\n/**\r\n * @method map()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} sMin\r\n * @param {Number} sMax\r\n * @param {Number} dMin\r\n * @param {Number} dMax\r\n */\r\nglobal.map = function(value, sMin, sMax, dMin, dMax) {\r\n  return this.lerp(this.norm(value, sMin, sMax), dMin, dMax)\r\n}\r\n\r\n/**\r\n * @method dist()\r\n * @global\r\n * @param {Number} px\r\n * @param {Number} py\r\n * @param {Number} qx\r\n * @param {Number} qy\r\n */\r\nglobal.dist = function(px, py, qx, qy) {\r\n  let dx = px - qx;\r\n  let dy = py - qy;\r\n  return Math.sqrt(dx * dx + dy * dy);\r\n}\r\n\r\n/**\r\n * @method distSq()\r\n * @global\r\n * @param {Number} px\r\n * @param {Number} py\r\n * @param {Number} qx\r\n * @param {Number} qy\r\n */\r\nglobal.distSq = function(px, py, qx, qy) {\r\n  let dx = px - qx;\r\n  let dy = py - qy;\r\n  return (dx * dx + dy * dy);\r\n}\r\n\r\n/**\r\n * @method random()\r\n * @global\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.random = function(min, max) {\r\n  if (max === undefined) {\r\n    return Math.random() * (min === undefined ? 1 : min);\r\n  } else {\r\n    return min + Math.random() * (max - min);\r\n  }\r\n}\r\n\r\n/**\r\n * @method randomInt()\r\n * @global\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.randomInt = function(min, max) {\r\n  return Math.floor(random(min, max))\r\n}\r\n\r\n/**\r\n * @method clamp()\r\n * @global\r\n * @param {Number} value\r\n * @param {Number} min\r\n * @param {Number} max\r\n */\r\nglobal.clamp = function(value, min, max) {\r\n  return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));\r\n}\r\n\r\n/**\r\n * @method tween()\r\n * @global\r\n * @param {Number} pos\r\n * @param {Number} target\r\n * @param {Number} speed\r\n */\r\nglobal.tween = function(pos, target, speed) {\r\n  if (speed == undefined) speed = 20;\r\n  pos += (target - pos) / speed;\r\n  return pos;\r\n}\r\n\r\n/**\r\n * @method checkType()\r\n * @global\r\n * @param {*} value\r\n * @param {*} type\r\n */\r\nglobal.checkType = function(value, type) {\r\n  if (value === undefined) { return };\r\n  if (typeof value === 'object') {\r\n    let checkObjects = value.constructor.toString().toLowerCase().indexOf(type + '()');\r\n    if (checkObjects === -1) {\r\n      throw ('Type Cheking Error : (' + (typeof value) + ' ' + value + ')' + ' is not typeof ' + type)\r\n    } else {\r\n      return value;\r\n    }\r\n  } else {\r\n    if (typeof value !== type) {\r\n      throw ('Type Cheking Error : (' + (typeof value) + ' ' + value + ')' + ' is not typeof ' + type)\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @method optional()\r\n * @global\r\n * @param {*} value\r\n * @param {*} optValue\r\n */\r\nglobal.optional = function(value, optValue) {\r\n  if (value === undefined) {\r\n    value = optValue\r\n  };\r\n  return value;\r\n}\r\n\r\n\r\n\r\n/**\r\n *\r\n * @method intersects()\r\n * @param {Object} r1\r\n * @param {Object} r2\r\n * @returns {Boolean} !collides\r\n */\r\nglobal.intersects = function(r1, r2) {\r\n  let r1x = r1.x;\r\n  let r1xw = r1.x + r1.width;\r\n  let r1y = r1.y;\r\n  let r1yh = r1.y + r1.height;\r\n\r\n  let r2x = r2.x;\r\n  let r2xw = r2.x + r2.width;\r\n  let r2y = r2.y;\r\n  let r2yh = r2.y + r2.height;\r\n\r\n  if (!r1.width || !r1.height) {\r\n    r1xw = r1.x;\r\n    r1yh = r1.y;\r\n    // console.log('rect1 is a point');\r\n  }\r\n  if (!r2.width || !r2.height) {\r\n    r2xw = r2.x;\r\n    r2yh = r2.y;\r\n    // console.log('rect2 is a point');\r\n  }\r\n  if ((!r1.width || !r1.height) && (!r2.width || !r2.height)) {\r\n    // console.log('Cant Resolve Both Objects As Point');\r\n  }\r\n  return !(\r\n    r2x >= r1xw ||\r\n    r1x >= r2xw ||\r\n    r2y >= r1yh ||\r\n    r1y >= r2yh\r\n  )\r\n}\r\n\r\n\r\n\r\n/**\r\n * GLOBAL VARIABLES\r\n */\r\n\r\n// Mouse Listeners //\r\nglobal.mouseX = 0;\r\nglobal.mouseY = 0;\r\nglobal.mouseDown = false;\r\nwindow.addEventListener('mousemove', function (e) {\r\n  global.mouseX = e.offsetX;\r\n  global.mouseY = e.offsetY;\r\n});\r\nwindow.addEventListener('mousedown', function () {\r\n  global.mouseDown = true;\r\n});\r\nwindow.addEventListener('mouseup', function () {\r\n  global.mouseDown = false;\r\n});\r\n\r\n// Keyboard Listeners //\r\nglobal.CURRENT_KEYS = {};\r\nglobal.KEY_W = 87;\r\nglobal.KEY_A = 65;\r\nglobal.KEY_S = 83;\r\nglobal.KEY_D = 68;\r\nglobal.KEY_SPACE = 32;\r\n\r\nglobal.ARROW_UP = 38;\r\nglobal.ARROW_DOWN = 40;\r\nglobal.ARROW_LEFT = 37;\r\nglobal.ARROW_RIGHT = 39;\r\nwindow.addEventListener('keydown', function (e) {\r\n  global.code = e.keyCode || e.which;\r\n  global.CURRENT_KEYS[code] = true;\r\n  if (window.onKeyPressed) {\r\n    global.onKeyPressed(code, e);\r\n  }\r\n})\r\nwindow.addEventListener('keyup', function (e) {\r\n  global.code = e.keyCode || e.which;\r\n  global.CURRENT_KEYS[code] = false;\r\n})\r\n\r\n\r\n\r\nglobal.CANVAS_WIDTH = 0;\r\nglobal.CANVAS_HEIGHT = 0;\r\nglobal.WINDOW_WIDTH = 0;\r\nglobal.WINDOW_HEIGHT = 0;\r\nfunction getWindowSize() {\r\n  global.WINDOW_WIDTH = window.innerWidth;\r\n  global.WINDOW_HEIGHT = window.innerHeight;\r\n}\r\ngetWindowSize();\r\nwindow.addEventListener('resize', getWindowSize);\r\n\r\n\r\n\r\n// BlendModes\r\nglobal.ADD = 'lighter';\r\nglobal.DIFFERENCE = 'difference';\r\nglobal.EXCLUSION = 'exclusion';\r\nglobal.SCREEN = 'screen';\r\nglobal.XOR = 'xor';\r\nglobal.COPY = 'copy';\r\n\r\nglobal.SRC_OVER = 'source-over';\r\nglobal.SRC_OUT = 'source-out';\r\nglobal.SRC_IN = 'source-in';\r\nglobal.SRC_TOP = 'source-atop';\r\n\r\nglobal.DEST_OVER = 'destination-over';\r\nglobal.DEST_OUT = 'destination-out';\r\nglobal.DEST_IN = 'destination-in';\r\nglobal.DEST_TOP = 'destination-atop';\r\n\r\n// TEXT\r\nglobal.CENTER = 'center';\r\nglobal.MIDDLE = 'middle';\r\nglobal.CORNER = 'corner';","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}